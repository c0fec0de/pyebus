
r,b7v,AdaptHeatCurve,,s,IGN:4,,,,yesno,s,UCH,0=no;1=yes,,automatic correction of configured heat curve
MsgDef('b7v', 'AdaptHeatCurve', read=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='automatic correction of configured heat curve')

w,b7v,AdaptHeatCurve,yesno,m,UCH,0=no;1=yes,,automatic correction of configured heat curve
MsgDef('b7v', 'AdaptHeatCurve', write=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='automatic correction of configured heat curve')

r,b7v,BankHolidayEndPeriod,,s,IGN:4,,,,hto,s,HDA,,,end date of bank holidays
MsgDef('b7v', 'BankHolidayEndPeriod', read=True)
    FieldDef(0, 'hto', DateType(), comment='end date of bank holidays')

w,b7v,BankHolidayEndPeriod,hto,m,HDA,,,end date of bank holidays
MsgDef('b7v', 'BankHolidayEndPeriod', write=True)
    FieldDef(0, 'hto', DateType(), comment='end date of bank holidays')

r,b7v,BankHolidayStartPeriod,,s,IGN:4,,,,hfrom,s,HDA,,,start date of bank holidays
MsgDef('b7v', 'BankHolidayStartPeriod', read=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of bank holidays')

w,b7v,BankHolidayStartPeriod,hfrom,m,HDA,,,start date of bank holidays
MsgDef('b7v', 'BankHolidayStartPeriod', write=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of bank holidays')

r,b7v,ccTimer.Friday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ccTimer.Friday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ccTimer.Friday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ccTimer.Friday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ccTimer.Monday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ccTimer.Monday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ccTimer.Monday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ccTimer.Monday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ccTimer.Saturday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ccTimer.Saturday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ccTimer.Saturday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ccTimer.Saturday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ccTimer.Sunday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ccTimer.Sunday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ccTimer.Sunday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ccTimer.Sunday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ccTimer.Thursday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ccTimer.Thursday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ccTimer.Thursday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ccTimer.Thursday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ccTimer.Tuesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ccTimer.Tuesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ccTimer.Tuesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ccTimer.Tuesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ccTimer.Wednesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ccTimer.Wednesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ccTimer.Wednesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ccTimer.Wednesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,clearerrorhistory,cleared,s,UCH,0=no;1=yes,,
MsgDef('b7v', 'clearerrorhistory', write=True)
    FieldDef(0, 'cleared', EnumType(('no', 'yes')))

r,b7v,ContinuosHeating,,s,IGN:4,,,,tempv,s,EXP,,°C,"-26=off, when the outside temperature falls below this threshold temperature the continuous heating function is started (off <=> function is disabled)"
MsgDef('b7v', 'ContinuosHeating', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='-26=off, when the outside temperature falls below this threshold temperature the continuous heating function is started (off <=> function is disabled)')

w,b7v,ContinuosHeating,tempv,m,EXP,,°C,"-26=off, when the outside temperature falls below this threshold temperature the continuous heating function is started (off <=> function is disabled)"
MsgDef('b7v', 'ContinuosHeating', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='-26=off, when the outside temperature falls below this threshold temperature the continuous heating function is started (off <=> function is disabled)')

r,b7v,currenterror,error,s,UIN,,,error number,error,s,UIN,,,error number,error,s,UIN,,,error number,error,s,UIN,,,error number,error,s,UIN,,,error number
MsgDef('b7v', 'currenterror', read=True)
    FieldDef(0, 'error.0', IntType(0, 65534), comment='error number')
    FieldDef(1, 'error.1', IntType(0, 65534), comment='error number')
    FieldDef(2, 'error.2', IntType(0, 65534), comment='error number')
    FieldDef(3, 'error.3', IntType(0, 65534), comment='error number')
    FieldDef(4, 'error.4', IntType(0, 65534), comment='error number')

r,b7v,CylinderChargeHyst,,s,IGN:4,,,,calibrationv,s,EXP,,K,Hysterese Speicherladung
MsgDef('b7v', 'CylinderChargeHyst', read=True)
    FieldDef(0, 'calibrationv', FloatType(), unit='K', comment='Hysterese Speicherladung')

w,b7v,CylinderChargeHyst,calibrationv,m,EXP,,K,Hysterese Speicherladung
MsgDef('b7v', 'CylinderChargeHyst', write=True)
    FieldDef(0, 'calibrationv', FloatType(), unit='K', comment='Hysterese Speicherladung')

r,b7v,CylinderChargeOffset,,s,IGN:4,,,,calibrationv,s,EXP,,K,Speicherlad. Offset
MsgDef('b7v', 'CylinderChargeOffset', read=True)
    FieldDef(0, 'calibrationv', FloatType(), unit='K', comment='Speicherlad. Offset')

w,b7v,CylinderChargeOffset,calibrationv,m,EXP,,K,Speicherlad. Offset
MsgDef('b7v', 'CylinderChargeOffset', write=True)
    FieldDef(0, 'calibrationv', FloatType(), unit='K', comment='Speicherlad. Offset')

r,b7v,Date,,s,IGN:4,,,,date,s,HDA,,,Aktuelles Datum
MsgDef('b7v', 'Date', read=True)
    FieldDef(0, 'date', DateType(), comment='Aktuelles Datum')

w,b7v,Date,date,m,HDA,,,Aktuelles Datum
MsgDef('b7v', 'Date', write=True)
    FieldDef(0, 'date', DateType(), comment='Aktuelles Datum')

r,b7v,DisplayedOutsideTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,Außentemperatur
MsgDef('b7v', 'DisplayedOutsideTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='Außentemperatur')

r,b7v,errorhistory,index,m,UCH,,,,status,s,UCH,,,Status,time2,s,VTM,,,time,date,s,HDA,,,date,error,s,UIN,,,error number
MsgDef('b7v', 'errorhistory', read=True)
    FieldDef(0, 'index', IntType(0, 254))
    FieldDef(1, 'status', IntType(0, 254), comment='Status')
    FieldDef(2, 'time2', HourMinuteType(), comment='time')
    FieldDef(3, 'date', DateType(), comment='date')
    FieldDef(4, 'error', IntType(0, 65534), comment='error number')
    VirtFieldDef('date+time2', DateTimeType())

r,b7v,FrostOverRideTime,,s,IGN:4,,,,hoursum2,s,UIN,,h,delay before frost protection is activated
MsgDef('b7v', 'FrostOverRideTime', read=True)
    FieldDef(0, 'hoursum2', IntType(0, 65534), unit='h', comment='delay before frost protection is activated')

w,b7v,FrostOverRideTime,hoursum2,m,UIN,,h,delay before frost protection is activated
MsgDef('b7v', 'FrostOverRideTime', write=True)
    FieldDef(0, 'hoursum2', IntType(0, 65534), unit='h', comment='delay before frost protection is activated')

r1,b7v,Hc1ActualFlowTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,current flow temperature setpoint of Hc1
MsgDef('b7v', 'Hc1ActualFlowTempDesired', read=True, prio=1)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current flow temperature setpoint of Hc1')

r,b7v,Hc1AutoOffMode,,s,IGN:4,,,,offmode,s,UIN,0=eco;1=night,,operation of Hc1 during the lowering time; no influence if room temperature modulation is set to thermostat
MsgDef('b7v', 'Hc1AutoOffMode', read=True)
    FieldDef(0, 'offmode', EnumType(('eco', 'night')), comment='operation of Hc1 during the lowering time; no influence if room temperature modulation is set to thermostat')

w,b7v,Hc1AutoOffMode,offmode,m,UIN,0=eco;1=night,,operation of Hc1 during the lowering time; no influence if room temperature modulation is set to thermostat
MsgDef('b7v', 'Hc1AutoOffMode', write=True)
    FieldDef(0, 'offmode', EnumType(('eco', 'night')), comment='operation of Hc1 during the lowering time; no influence if room temperature modulation is set to thermostat')

r,b7v,Hc1CircuitType,,s,IGN:4,,,,mctype,s,UCH,0=inactive;1=mixer;2=fixed;3=hwc;4=returnincr;5=pool,,mixer type,,s,IGN:1,,,
MsgDef('b7v', 'Hc1CircuitType', read=True)
    FieldDef(0, 'mctype', EnumType(('inactive', 'mixer', 'fixed', 'hwc', 'returnincr', 'pool')), comment='mixer type')

r,b7v,Hc1ExcessTemp,,s,IGN:4,,,,calibrationv,s,EXP,,K,excess temperature of Hc1 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)
MsgDef('b7v', 'Hc1ExcessTemp', read=True)
    FieldDef(0, 'calibrationv', FloatType(), unit='K', comment="excess temperature of Hc1 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)")

w,b7v,Hc1ExcessTemp,calibrationv,m,EXP,,K,excess temperature of Hc1 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)
MsgDef('b7v', 'Hc1ExcessTemp', write=True)
    FieldDef(0, 'calibrationv', FloatType(), unit='K', comment="excess temperature of Hc1 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)")

r,b7v,Hc1FlowTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,current flow temperature of Hc1
MsgDef('b7v', 'Hc1FlowTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current flow temperature of Hc1')

r2,b7v,Hc1HeatCurve,,s,IGN:4,,,,,s,EXP,,,heating curve of Hc1
MsgDef('b7v', 'Hc1HeatCurve', read=True, prio=2)
    FieldDef(0, '', FloatType(), comment='heating curve of Hc1')

w,b7v,Hc1HeatCurve,,m,EXP,,,heating curve of Hc1
MsgDef('b7v', 'Hc1HeatCurve', write=True)
    FieldDef(0, '', FloatType(), comment='heating curve of Hc1')

r,b7v,Hc1HeatCurveAdaption,,s,IGN:4,,,,,s,EXP,,,adaption applied to heating curve of Hc1
MsgDef('b7v', 'Hc1HeatCurveAdaption', read=True)
    FieldDef(0, '', FloatType(), comment='adaption applied to heating curve of Hc1')

r,b7v,Hc1MaxFlowTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,maximum flow temperature setpoint (end emphasis) of Hc1
MsgDef('b7v', 'Hc1MaxFlowTempDesired', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='maximum flow temperature setpoint (end emphasis) of Hc1')

w,b7v,Hc1MaxFlowTempDesired,tempv,m,EXP,,°C,maximum flow temperature setpoint (end emphasis) of Hc1
MsgDef('b7v', 'Hc1MaxFlowTempDesired', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='maximum flow temperature setpoint (end emphasis) of Hc1')

r,b7v,Hc1MinFlowTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,minimum flow temperature setpoint (end emphasis) of Hc1
MsgDef('b7v', 'Hc1MinFlowTempDesired', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='minimum flow temperature setpoint (end emphasis) of Hc1')

w,b7v,Hc1MinFlowTempDesired,tempv,m,EXP,,°C,minimum flow temperature setpoint (end emphasis) of Hc1
MsgDef('b7v', 'Hc1MinFlowTempDesired', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='minimum flow temperature setpoint (end emphasis) of Hc1')

r,b7v,Hc1MixerMovement,,s,IGN:4,,,,,s,EXP,,,"status of mixer (<0 closing, >0 opening)"
MsgDef('b7v', 'Hc1MixerMovement', read=True)
    FieldDef(0, '', FloatType(), comment='status of mixer (<0 closing, >0 opening)')

r,b7v,Hc1PumpStatus,,s,IGN:4,,,,,s,UIN,,,pump status of zone 1
MsgDef('b7v', 'Hc1PumpStatus', read=True)
    FieldDef(0, '', IntType(0, 65534), comment='pump status of zone 1')

w,b7v,Hc1PumpStatus,,m,UIN,,,pump status of zone 1
MsgDef('b7v', 'Hc1PumpStatus', write=True)
    FieldDef(0, '', IntType(0, 65534), comment='pump status of zone 1')

r2,b7v,Hc1RoomTempSwitchOn,,s,IGN:4,,,,rcmode,s,UIN,0=off;1=modulating;2=thermostat,,room temperature modulation of Hc1
MsgDef('b7v', 'Hc1RoomTempSwitchOn', read=True, prio=2)
    FieldDef(0, 'rcmode', EnumType(('off', 'modulating', 'thermostat')), comment='room temperature modulation of Hc1')

w,b7v,Hc1RoomTempSwitchOn,rcmode,m,UIN,0=off;1=modulating;2=thermostat,,room temperature modulation of Hc1
MsgDef('b7v', 'Hc1RoomTempSwitchOn', write=True)
    FieldDef(0, 'rcmode', EnumType(('off', 'modulating', 'thermostat')), comment='room temperature modulation of Hc1')

r2,b7v,Hc1Status,,s,IGN:4,,,,,s,UCH,,,status of zone 1
MsgDef('b7v', 'Hc1Status', read=True, prio=2)
    FieldDef(0, '', IntType(0, 254), comment='status of zone 1')

w,b7v,Hc1Status,,m,UCH,,,status of zone 1
MsgDef('b7v', 'Hc1Status', write=True)
    FieldDef(0, '', IntType(0, 254), comment='status of zone 1')

r,b7v,Hc1SummerTempLimit,,s,IGN:4,,,,tempv,s,EXP,,°C,if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint
MsgDef('b7v', 'Hc1SummerTempLimit', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint')

w,b7v,Hc1SummerTempLimit,tempv,m,EXP,,°C,if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint
MsgDef('b7v', 'Hc1SummerTempLimit', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint')

r,b7v,Hc2ActualFlowTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,current flow temperature setpoint of Hc2
MsgDef('b7v', 'Hc2ActualFlowTempDesired', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current flow temperature setpoint of Hc2')

r,b7v,Hc2AutoOffMode,,s,IGN:4,,,,offmode,s,UIN,0=eco;1=night,,operation of Hc2 during the lowering time; no influence if room temperature modulation is set to thermostat
MsgDef('b7v', 'Hc2AutoOffMode', read=True)
    FieldDef(0, 'offmode', EnumType(('eco', 'night')), comment='operation of Hc2 during the lowering time; no influence if room temperature modulation is set to thermostat')

w,b7v,Hc2AutoOffMode,offmode,m,UIN,0=eco;1=night,,operation of Hc2 during the lowering time; no influence if room temperature modulation is set to thermostat
MsgDef('b7v', 'Hc2AutoOffMode', write=True)
    FieldDef(0, 'offmode', EnumType(('eco', 'night')), comment='operation of Hc2 during the lowering time; no influence if room temperature modulation is set to thermostat')

r,b7v,Hc2CircuitType,,s,IGN:4,,,,mctype,s,UCH,0=inactive;1=mixer;2=fixed;3=hwc;4=returnincr;5=pool,,mixer type,,s,IGN:1,,,
MsgDef('b7v', 'Hc2CircuitType', read=True)
    FieldDef(0, 'mctype', EnumType(('inactive', 'mixer', 'fixed', 'hwc', 'returnincr', 'pool')), comment='mixer type')

r,b7v,Hc2ExcessTemp,,s,IGN:4,,,,calibrationv,s,EXP,,K,excess temperature of Hc2 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)
MsgDef('b7v', 'Hc2ExcessTemp', read=True)
    FieldDef(0, 'calibrationv', FloatType(), unit='K', comment="excess temperature of Hc2 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)")

w,b7v,Hc2ExcessTemp,calibrationv,m,EXP,,K,excess temperature of Hc2 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)
MsgDef('b7v', 'Hc2ExcessTemp', write=True)
    FieldDef(0, 'calibrationv', FloatType(), unit='K', comment="excess temperature of Hc2 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)")

r,b7v,Hc2FlowTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,current flow temperature of Hc2
MsgDef('b7v', 'Hc2FlowTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current flow temperature of Hc2')

r,b7v,Hc2HeatCurve,,s,IGN:4,,,,,s,EXP,,,heating curve of Hc2
MsgDef('b7v', 'Hc2HeatCurve', read=True)
    FieldDef(0, '', FloatType(), comment='heating curve of Hc2')

w,b7v,Hc2HeatCurve,,m,EXP,,,heating curve of Hc2
MsgDef('b7v', 'Hc2HeatCurve', write=True)
    FieldDef(0, '', FloatType(), comment='heating curve of Hc2')

r,b7v,Hc2HeatCurveAdaption,,s,IGN:4,,,,,s,EXP,,,adaption applied to heating curve of Hc2
MsgDef('b7v', 'Hc2HeatCurveAdaption', read=True)
    FieldDef(0, '', FloatType(), comment='adaption applied to heating curve of Hc2')

r,b7v,Hc2MaxFlowTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,maximum flow temperature setpoint (end emphasis) of Hc2
MsgDef('b7v', 'Hc2MaxFlowTempDesired', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='maximum flow temperature setpoint (end emphasis) of Hc2')

w,b7v,Hc2MaxFlowTempDesired,tempv,m,EXP,,°C,maximum flow temperature setpoint (end emphasis) of Hc2
MsgDef('b7v', 'Hc2MaxFlowTempDesired', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='maximum flow temperature setpoint (end emphasis) of Hc2')

r,b7v,Hc2MinFlowTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,minimum flow temperature setpoint (end emphasis) of Hc2
MsgDef('b7v', 'Hc2MinFlowTempDesired', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='minimum flow temperature setpoint (end emphasis) of Hc2')

w,b7v,Hc2MinFlowTempDesired,tempv,m,EXP,,°C,minimum flow temperature setpoint (end emphasis) of Hc2
MsgDef('b7v', 'Hc2MinFlowTempDesired', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='minimum flow temperature setpoint (end emphasis) of Hc2')

r,b7v,Hc2MixerMovement,,s,IGN:4,,,,,s,EXP,,,"status of mixer (<0 closing, >0 opening)"
MsgDef('b7v', 'Hc2MixerMovement', read=True)
    FieldDef(0, '', FloatType(), comment='status of mixer (<0 closing, >0 opening)')

r,b7v,Hc2PumpStatus,,s,IGN:4,,,,,s,UIN,,,pump status of zone 2
MsgDef('b7v', 'Hc2PumpStatus', read=True)
    FieldDef(0, '', IntType(0, 65534), comment='pump status of zone 2')

w,b7v,Hc2PumpStatus,,m,UIN,,,pump status of zone 2
MsgDef('b7v', 'Hc2PumpStatus', write=True)
    FieldDef(0, '', IntType(0, 65534), comment='pump status of zone 2')

r,b7v,Hc2RoomTempSwitchOn,,s,IGN:4,,,,rcmode,s,UIN,0=off;1=modulating;2=thermostat,,room temperature modulation of Hc2
MsgDef('b7v', 'Hc2RoomTempSwitchOn', read=True)
    FieldDef(0, 'rcmode', EnumType(('off', 'modulating', 'thermostat')), comment='room temperature modulation of Hc2')

w,b7v,Hc2RoomTempSwitchOn,rcmode,m,UIN,0=off;1=modulating;2=thermostat,,room temperature modulation of Hc2
MsgDef('b7v', 'Hc2RoomTempSwitchOn', write=True)
    FieldDef(0, 'rcmode', EnumType(('off', 'modulating', 'thermostat')), comment='room temperature modulation of Hc2')

r,b7v,Hc2Status,,s,IGN:4,,,,,s,UCH,,,status of zone 2
MsgDef('b7v', 'Hc2Status', read=True)
    FieldDef(0, '', IntType(0, 254), comment='status of zone 2')

w,b7v,Hc2Status,,m,UCH,,,status of zone 2
MsgDef('b7v', 'Hc2Status', write=True)
    FieldDef(0, '', IntType(0, 254), comment='status of zone 2')

r,b7v,Hc2SummerTempLimit,,s,IGN:4,,,,tempv,s,EXP,,°C,if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint
MsgDef('b7v', 'Hc2SummerTempLimit', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint')

w,b7v,Hc2SummerTempLimit,tempv,m,EXP,,°C,if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint
MsgDef('b7v', 'Hc2SummerTempLimit', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint')

r,b7v,Hc3ActualFlowTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,current flow temperature setpoint of Hc3
MsgDef('b7v', 'Hc3ActualFlowTempDesired', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current flow temperature setpoint of Hc3')

r,b7v,Hc3AutoOffMode,,s,IGN:4,,,,offmode,s,UIN,0=eco;1=night,,operation of Hc3 during the lowering time; no influence if room temperature modulation is set to thermostat
MsgDef('b7v', 'Hc3AutoOffMode', read=True)
    FieldDef(0, 'offmode', EnumType(('eco', 'night')), comment='operation of Hc3 during the lowering time; no influence if room temperature modulation is set to thermostat')

w,b7v,Hc3AutoOffMode,offmode,m,UIN,0=eco;1=night,,operation of Hc3 during the lowering time; no influence if room temperature modulation is set to thermostat
MsgDef('b7v', 'Hc3AutoOffMode', write=True)
    FieldDef(0, 'offmode', EnumType(('eco', 'night')), comment='operation of Hc3 during the lowering time; no influence if room temperature modulation is set to thermostat')

r,b7v,Hc3CircuitType,,s,IGN:4,,,,mctype,s,UCH,0=inactive;1=mixer;2=fixed;3=hwc;4=returnincr;5=pool,,mixer type,,s,IGN:1,,,
MsgDef('b7v', 'Hc3CircuitType', read=True)
    FieldDef(0, 'mctype', EnumType(('inactive', 'mixer', 'fixed', 'hwc', 'returnincr', 'pool')), comment='mixer type')

r,b7v,Hc3ExcessTemp,,s,IGN:4,,,,calibrationv,s,EXP,,K,excess temperature of Hc3 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)
MsgDef('b7v', 'Hc3ExcessTemp', read=True)
    FieldDef(0, 'calibrationv', FloatType(), unit='K', comment="excess temperature of Hc3 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)")

w,b7v,Hc3ExcessTemp,calibrationv,m,EXP,,K,excess temperature of Hc3 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)
MsgDef('b7v', 'Hc3ExcessTemp', write=True)
    FieldDef(0, 'calibrationv', FloatType(), unit='K', comment="excess temperature of Hc3 (flow temperature's setpoint is increased by this value to keep the mixing valve in its control range)")

r,b7v,Hc3FlowTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,current flow temperature of Hc3
MsgDef('b7v', 'Hc3FlowTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current flow temperature of Hc3')

r,b7v,Hc3HeatCurve,,s,IGN:4,,,,,s,EXP,,,heating curve of Hc3
MsgDef('b7v', 'Hc3HeatCurve', read=True)
    FieldDef(0, '', FloatType(), comment='heating curve of Hc3')

w,b7v,Hc3HeatCurve,,m,EXP,,,heating curve of Hc3
MsgDef('b7v', 'Hc3HeatCurve', write=True)
    FieldDef(0, '', FloatType(), comment='heating curve of Hc3')

r,b7v,Hc3HeatCurveAdaption,,s,IGN:4,,,,,s,EXP,,,adaption applied to heating curve of Hc3
MsgDef('b7v', 'Hc3HeatCurveAdaption', read=True)
    FieldDef(0, '', FloatType(), comment='adaption applied to heating curve of Hc3')

r,b7v,Hc3MaxFlowTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,maximum flow temperature setpoint (end emphasis) of Hc3
MsgDef('b7v', 'Hc3MaxFlowTempDesired', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='maximum flow temperature setpoint (end emphasis) of Hc3')

w,b7v,Hc3MaxFlowTempDesired,tempv,m,EXP,,°C,maximum flow temperature setpoint (end emphasis) of Hc3
MsgDef('b7v', 'Hc3MaxFlowTempDesired', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='maximum flow temperature setpoint (end emphasis) of Hc3')

r,b7v,Hc3MinFlowTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,minimum flow temperature setpoint (end emphasis) of Hc3
MsgDef('b7v', 'Hc3MinFlowTempDesired', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='minimum flow temperature setpoint (end emphasis) of Hc3')

w,b7v,Hc3MinFlowTempDesired,tempv,m,EXP,,°C,minimum flow temperature setpoint (end emphasis) of Hc3
MsgDef('b7v', 'Hc3MinFlowTempDesired', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='minimum flow temperature setpoint (end emphasis) of Hc3')

r,b7v,Hc3MixerMovement,,s,IGN:4,,,,,s,EXP,,,"status of mixer (<0 closing, >0 opening)"
MsgDef('b7v', 'Hc3MixerMovement', read=True)
    FieldDef(0, '', FloatType(), comment='status of mixer (<0 closing, >0 opening)')

r,b7v,Hc3PumpStatus,,s,IGN:4,,,,,s,UIN,,,pump status of zone 3
MsgDef('b7v', 'Hc3PumpStatus', read=True)
    FieldDef(0, '', IntType(0, 65534), comment='pump status of zone 3')

w,b7v,Hc3PumpStatus,,m,UIN,,,pump status of zone 3
MsgDef('b7v', 'Hc3PumpStatus', write=True)
    FieldDef(0, '', IntType(0, 65534), comment='pump status of zone 3')

r,b7v,Hc3RoomTempSwitchOn,,s,IGN:4,,,,rcmode,s,UIN,0=off;1=modulating;2=thermostat,,room temperature modulation of Hc3
MsgDef('b7v', 'Hc3RoomTempSwitchOn', read=True)
    FieldDef(0, 'rcmode', EnumType(('off', 'modulating', 'thermostat')), comment='room temperature modulation of Hc3')

w,b7v,Hc3RoomTempSwitchOn,rcmode,m,UIN,0=off;1=modulating;2=thermostat,,room temperature modulation of Hc3
MsgDef('b7v', 'Hc3RoomTempSwitchOn', write=True)
    FieldDef(0, 'rcmode', EnumType(('off', 'modulating', 'thermostat')), comment='room temperature modulation of Hc3')

r,b7v,Hc3Status,,s,IGN:4,,,,,s,UCH,,,status of zone 2
MsgDef('b7v', 'Hc3Status', read=True)
    FieldDef(0, '', IntType(0, 254), comment='status of zone 2')

w,b7v,Hc3Status,,m,UCH,,,status of zone 2
MsgDef('b7v', 'Hc3Status', write=True)
    FieldDef(0, '', IntType(0, 254), comment='status of zone 2')

r,b7v,Hc3SummerTempLimit,,s,IGN:4,,,,tempv,s,EXP,,°C,if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint
MsgDef('b7v', 'Hc3SummerTempLimit', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint')

w,b7v,Hc3SummerTempLimit,tempv,m,EXP,,°C,if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint
MsgDef('b7v', 'Hc3SummerTempLimit', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='if outside temperature > summer limit => heating is OFF;applies to comfort and night setback setpoint')

r,b7v,HcStorageTempBottom,,s,IGN:4,,,,tempv,s,EXP,,°C,"Temp.fühler Hz, unten"
MsgDef('b7v', 'HcStorageTempBottom', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='Temp.fühler Hz, unten')

r,b7v,HcStorageTempTop,,s,IGN:4,,,,tempv,s,EXP,,°C,"Temp.fühler Hz, oben"
MsgDef('b7v', 'HcStorageTempTop', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='Temp.fühler Hz, oben')

r,b7v,HolidayEndPeriod,,s,IGN:4,,,,hto,s,HDA,,,end date of holidays
MsgDef('b7v', 'HolidayEndPeriod', read=True)
    FieldDef(0, 'hto', DateType(), comment='end date of holidays')

w,b7v,HolidayEndPeriod,hto,m,HDA,,,end date of holidays
MsgDef('b7v', 'HolidayEndPeriod', write=True)
    FieldDef(0, 'hto', DateType(), comment='end date of holidays')

r,b7v,HolidayStartPeriod,,s,IGN:4,,,,hfrom,s,HDA,,,start date of holidays
MsgDef('b7v', 'HolidayStartPeriod', read=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of holidays')

w,b7v,HolidayStartPeriod,hfrom,m,HDA,,,start date of holidays
MsgDef('b7v', 'HolidayStartPeriod', write=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of holidays')

r,b7v,HolidayTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,holiday setpoint
MsgDef('b7v', 'HolidayTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='holiday setpoint')

w,b7v,HolidayTemp,tempv,m,EXP,,°C,holiday setpoint
MsgDef('b7v', 'HolidayTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='holiday setpoint')

r,b7v,HwcBankHolidayEndPeriod,,s,IGN:4,,,,hto,s,HDA,,,end date of bank holidays
MsgDef('b7v', 'HwcBankHolidayEndPeriod', read=True)
    FieldDef(0, 'hto', DateType(), comment='end date of bank holidays')

w,b7v,HwcBankHolidayEndPeriod,hto,m,HDA,,,end date of bank holidays
MsgDef('b7v', 'HwcBankHolidayEndPeriod', write=True)
    FieldDef(0, 'hto', DateType(), comment='end date of bank holidays')

r,b7v,HwcBankHolidayStartPeriod,,s,IGN:4,,,,hfrom,s,HDA,,,start date of bank holidays
MsgDef('b7v', 'HwcBankHolidayStartPeriod', read=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of bank holidays')

w,b7v,HwcBankHolidayStartPeriod,hfrom,m,HDA,,,start date of bank holidays
MsgDef('b7v', 'HwcBankHolidayStartPeriod', write=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of bank holidays')

r,b7v,HwcFlowTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,desired flow temp for Hwc
MsgDef('b7v', 'HwcFlowTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='desired flow temp for Hwc')

r,b7v,HwcHolidayEndPeriod,,s,IGN:4,,,,hto,s,HDA,,,end date of holidays
MsgDef('b7v', 'HwcHolidayEndPeriod', read=True)
    FieldDef(0, 'hto', DateType(), comment='end date of holidays')

w,b7v,HwcHolidayEndPeriod,hto,m,HDA,,,end date of holidays
MsgDef('b7v', 'HwcHolidayEndPeriod', write=True)
    FieldDef(0, 'hto', DateType(), comment='end date of holidays')

r,b7v,HwcHolidayStartPeriod,,s,IGN:4,,,,hfrom,s,HDA,,,start date of holidays
MsgDef('b7v', 'HwcHolidayStartPeriod', read=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of holidays')

w,b7v,HwcHolidayStartPeriod,hfrom,m,HDA,,,start date of holidays
MsgDef('b7v', 'HwcHolidayStartPeriod', write=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of holidays')

r,b7v,HwcLockTime,,s,IGN:4,,,,minutes2,s,UIN,,min,Sperrzeit WW-Bedarf
MsgDef('b7v', 'HwcLockTime', read=True)
    FieldDef(0, 'minutes2', IntType(0, 65534), unit='min', comment='Sperrzeit WW-Bedarf')

w,b7v,HwcLockTime,minutes2,m,UIN,,min,Sperrzeit WW-Bedarf
MsgDef('b7v', 'HwcLockTime', write=True)
    FieldDef(0, 'minutes2', IntType(0, 65534), unit='min', comment='Sperrzeit WW-Bedarf')

r,b7v,HwcMaxFlowTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,maximum flow temperature setpoint of Hwc
MsgDef('b7v', 'HwcMaxFlowTempDesired', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='maximum flow temperature setpoint of Hwc')

w,b7v,HwcMaxFlowTempDesired,tempv,m,EXP,,°C,maximum flow temperature setpoint of Hwc
MsgDef('b7v', 'HwcMaxFlowTempDesired', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='maximum flow temperature setpoint of Hwc')

r2,b7v,HwcOpMode,,s,IGN:4,,,,opmode,s,UIN,0=off;1=auto;2=day;3=night,,operation mode of Hwc
MsgDef('b7v', 'HwcOpMode', read=True, prio=2)
    FieldDef(0, 'opmode', EnumType(('off', 'auto', 'day', 'night')), comment='operation mode of Hwc')

w,b7v,HwcOpMode,opmode,m,UIN,0=off;1=auto;2=day;3=night,,operation mode of Hwc
MsgDef('b7v', 'HwcOpMode', write=True)
    FieldDef(0, 'opmode', EnumType(('off', 'auto', 'day', 'night')), comment='operation mode of Hwc')

r,b7v,HwcParallelLoading,,s,IGN:4,,,,onoff,s,UCH,0=off;1=on,,heating and hot water parallel
MsgDef('b7v', 'HwcParallelLoading', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='heating and hot water parallel')

w,b7v,HwcParallelLoading,onoff,m,UCH,0=off;1=on,,heating and hot water parallel
MsgDef('b7v', 'HwcParallelLoading', write=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='heating and hot water parallel')

r,b7v,HwcSFMode,,s,IGN:4,,,,sfmode,s,UCH,0=auto;1=ventilation;2=party;3=veto;6=load,,
MsgDef('b7v', 'HwcSFMode', read=True)
    FieldDef(0, 'sfmode', EnumType(('auto', 'ventilation', 'party', 'veto', 'load')))

w,b7v,HwcSFMode,sfmode,m,UCH,0=auto;1=ventilation;2=party;3=veto;6=load,,
MsgDef('b7v', 'HwcSFMode', write=True)
    FieldDef(0, 'sfmode', EnumType(('auto', 'ventilation', 'party', 'veto', 'load')))

r1,b7v,HwcStorageTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,Speicheristtemperatur
MsgDef('b7v', 'HwcStorageTemp', read=True, prio=1)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='Speicheristtemperatur')

r,b7v,HwcStorageTempBottom,,s,IGN:4,,,,tempv,s,EXP,,°C,"Temp.fühler WW, unten"
MsgDef('b7v', 'HwcStorageTempBottom', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='Temp.fühler WW, unten')

r,b7v,HwcStorageTempTop,,s,IGN:4,,,,tempv,s,EXP,,°C,"Temp.fühler WW, oben"
MsgDef('b7v', 'HwcStorageTempTop', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='Temp.fühler WW, oben')

r2,b7v,HwcTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,setpoint of domestic hot water circuit
MsgDef('b7v', 'HwcTempDesired', read=True, prio=2)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='setpoint of domestic hot water circuit')

w,b7v,HwcTempDesired,tempv,m,EXP,,°C,setpoint of domestic hot water circuit
MsgDef('b7v', 'HwcTempDesired', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='setpoint of domestic hot water circuit')

r,b7v,hwcTimer.Friday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'hwcTimer.Friday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,hwcTimer.Friday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'hwcTimer.Friday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,hwcTimer.Monday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'hwcTimer.Monday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,hwcTimer.Monday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'hwcTimer.Monday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,hwcTimer.Saturday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'hwcTimer.Saturday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,hwcTimer.Saturday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'hwcTimer.Saturday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,hwcTimer.Sunday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'hwcTimer.Sunday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,hwcTimer.Sunday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'hwcTimer.Sunday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,hwcTimer.Thursday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'hwcTimer.Thursday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,hwcTimer.Thursday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'hwcTimer.Thursday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,hwcTimer.Tuesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'hwcTimer.Tuesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,hwcTimer.Tuesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'hwcTimer.Tuesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,hwcTimer.Wednesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'hwcTimer.Wednesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,hwcTimer.Wednesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'hwcTimer.Wednesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,HydraulicScheme,,s,IGN:4,,,,,s,UIN,,,Systemschema
MsgDef('b7v', 'HydraulicScheme', read=True)
    FieldDef(0, '', IntType(0, 65534), comment='Systemschema')

w,b7v,HydraulicScheme,,m,UIN,,,Systemschema
MsgDef('b7v', 'HydraulicScheme', write=True)
    FieldDef(0, '', IntType(0, 65534), comment='Systemschema')

r,b7v,Installer1,,s,IGN:4,,,,shortname,s,STR:6,,,installer's name
MsgDef('b7v', 'Installer1', read=True)
    FieldDef(0, 'shortname', StrType(length=6), comment="installer's name")

w,b7v,Installer1,shortname,m,STR:6,,,installer's name
MsgDef('b7v', 'Installer1', write=True)
    FieldDef(0, 'shortname', StrType(length=6), comment="installer's name")

r,b7v,Installer2,,s,IGN:4,,,,shortname,s,STR:6,,,installer's name
MsgDef('b7v', 'Installer2', read=True)
    FieldDef(0, 'shortname', StrType(length=6), comment="installer's name")

w,b7v,Installer2,shortname,m,STR:6,,,installer's name
MsgDef('b7v', 'Installer2', write=True)
    FieldDef(0, 'shortname', StrType(length=6), comment="installer's name")

r,b7v,KeyCodeforConfigMenu,,s,IGN:4,,,,,s,UIN,,,000-999; code for the installer's menues
MsgDef('b7v', 'KeyCodeforConfigMenu', read=True)
    FieldDef(0, '', IntType(0, 65534), comment="000-999; code for the installer's menues")

w,b7v,KeyCodeforConfigMenu,,m,UIN,,,000-999; code for the installer's menues
MsgDef('b7v', 'KeyCodeforConfigMenu', write=True)
    FieldDef(0, '', IntType(0, 65534), comment="000-999; code for the installer's menues")

r,b7v,MaintenanceDate,,s,IGN:4,,,,date,s,HDA,,,Datum nächste Wartung
MsgDef('b7v', 'MaintenanceDate', read=True)
    FieldDef(0, 'date', DateType(), comment='Datum nächste Wartung')

w,b7v,MaintenanceDate,date,m,HDA,,,Datum nächste Wartung
MsgDef('b7v', 'MaintenanceDate', write=True)
    FieldDef(0, 'date', DateType(), comment='Datum nächste Wartung')

r,b7v,MaintenanceDue,,s,IGN:4,,,,yesno,s,UCH,0=no;1=yes,,zeigt an ob die Wartung fällig ist
MsgDef('b7v', 'MaintenanceDue', read=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='zeigt an ob die Wartung fällig ist')

r,b7v,MaxCylinderChargeTime,,s,IGN:4,,,,minutes2,s,UIN,,min,maximum cylinder charging time
MsgDef('b7v', 'MaxCylinderChargeTime', read=True)
    FieldDef(0, 'minutes2', IntType(0, 65534), unit='min', comment='maximum cylinder charging time')

w,b7v,MaxCylinderChargeTime,minutes2,m,UIN,,min,maximum cylinder charging time
MsgDef('b7v', 'MaxCylinderChargeTime', write=True)
    FieldDef(0, 'minutes2', IntType(0, 65534), unit='min', comment='maximum cylinder charging time')

r,b7v,MaxRoomHumidity,,s,IGN:4,,,,,s,UIN,,,maximum room humidity
MsgDef('b7v', 'MaxRoomHumidity', read=True)
    FieldDef(0, '', IntType(0, 65534), comment='maximum room humidity')

w,b7v,MaxRoomHumidity,,m,UIN,,,maximum room humidity
MsgDef('b7v', 'MaxRoomHumidity', write=True)
    FieldDef(0, '', IntType(0, 65534), comment='maximum room humidity')

r,b7v,MultiRelaySetting,,s,IGN:4,,,,mamode,s,UIN,0=circulation;1=dryer;2=zone;3=legiopump,,
MsgDef('b7v', 'MultiRelaySetting', read=True)
    FieldDef(0, 'mamode', EnumType(('circulation', 'dryer', 'zone', 'legiopump')))

w,b7v,MultiRelaySetting,mamode,m,UIN,0=circulation;1=dryer;2=zone;3=legiopump,,
MsgDef('b7v', 'MultiRelaySetting', write=True)
    FieldDef(0, 'mamode', EnumType(('circulation', 'dryer', 'zone', 'legiopump')))

r,b7v,noiseReductionTimer.Friday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Friday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,noiseReductionTimer.Friday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Friday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,noiseReductionTimer.Monday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Monday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,noiseReductionTimer.Monday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Monday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,noiseReductionTimer.Saturday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Saturday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,noiseReductionTimer.Saturday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Saturday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,noiseReductionTimer.Sunday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Sunday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,noiseReductionTimer.Sunday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Sunday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,noiseReductionTimer.Thursday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Thursday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,noiseReductionTimer.Thursday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Thursday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,noiseReductionTimer.Tuesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Tuesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,noiseReductionTimer.Tuesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Tuesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,noiseReductionTimer.Wednesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Wednesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,noiseReductionTimer.Wednesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'noiseReductionTimer.Wednesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,OpMode,,s,IGN:4,,,,opmode,s,UIN,0=off;1=auto;2=day;3=night,,operation mode of all/configured zone(s) matching OpModeEffect
MsgDef('b7v', 'OpMode', read=True)
    FieldDef(0, 'opmode', EnumType(('off', 'auto', 'day', 'night')), comment='operation mode of all/configured zone(s) matching OpModeEffect')

w,b7v,OpMode,opmode,m,UIN,0=off;1=auto;2=day;3=night,,operation mode of all/configured zone(s) matching OpModeEffect
MsgDef('b7v', 'OpMode', write=True)
    FieldDef(0, 'opmode', EnumType(('off', 'auto', 'day', 'night')), comment='operation mode of all/configured zone(s) matching OpModeEffect')

r,b7v,OpModeEffect,,s,IGN:4,,,,zonesel,s,UIN,0=alle;1=1;2=2;3=3;4=4;5=5;6=6,,selection which heating circuit is affected by changing parameters in the basic display
MsgDef('b7v', 'OpModeEffect', read=True)
    FieldDef(0, 'zonesel', EnumType(('alle', '1', '2', '3', '4', '5', '6')), comment='selection which heating circuit is affected by changing parameters in the basic display')

w,b7v,OpModeEffect,zonesel,m,UIN,0=alle;1=1;2=2;3=3;4=4;5=5;6=6,,selection which heating circuit is affected by changing parameters in the basic display
MsgDef('b7v', 'OpModeEffect', write=True)
    FieldDef(0, 'zonesel', EnumType(('alle', '1', '2', '3', '4', '5', '6')), comment='selection which heating circuit is affected by changing parameters in the basic display')

r,b7v,OutsideTempAvg,,s,IGN:4,,,,tempv,s,EXP,,°C,gerundete mittlere Außentemperatur (alle 3h aktualisiert)
MsgDef('b7v', 'OutsideTempAvg', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='gerundete mittlere Außentemperatur (alle 3h aktualisiert)')

w,b7v,OutsideTempAvg,tempv,m,EXP,,°C,gerundete mittlere Außentemperatur (alle 3h aktualisiert)
MsgDef('b7v', 'OutsideTempAvg', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='gerundete mittlere Außentemperatur (alle 3h aktualisiert)')

r,b7v,PhoneNumber1,,s,IGN:4,,,,shortphone,s,STR:6,,,installer's telephone number
MsgDef('b7v', 'PhoneNumber1', read=True)
    FieldDef(0, 'shortphone', StrType(length=6), comment="installer's telephone number")

w,b7v,PhoneNumber1,shortphone,m,STR:6,,,installer's telephone number
MsgDef('b7v', 'PhoneNumber1', write=True)
    FieldDef(0, 'shortphone', StrType(length=6), comment="installer's telephone number")

r,b7v,PhoneNumber2,,s,IGN:4,,,,shortphone,s,STR:6,,,installer's telephone number
MsgDef('b7v', 'PhoneNumber2', read=True)
    FieldDef(0, 'shortphone', StrType(length=6), comment="installer's telephone number")

w,b7v,PhoneNumber2,shortphone,m,STR:6,,,installer's telephone number
MsgDef('b7v', 'PhoneNumber2', write=True)
    FieldDef(0, 'shortphone', StrType(length=6), comment="installer's telephone number")

r,b7v,PrEnergySum,,s,IGN:4,,,,energy4,s,ULG,,kWh,Dieses Jahr Stromverbrauch gesamt
MsgDef('b7v', 'PrEnergySum', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Dieses Jahr Stromverbrauch gesamt')

w,b7v,PrEnergySum,energy4,m,ULG,,kWh,Dieses Jahr Stromverbrauch gesamt
MsgDef('b7v', 'PrEnergySum', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Dieses Jahr Stromverbrauch gesamt')

r,b7v,PrEnergySumHc,,s,IGN:4,,,,energy4,s,ULG,,kWh,Stromverbrauch Heizung gesamt
MsgDef('b7v', 'PrEnergySumHc', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Stromverbrauch Heizung gesamt')

w,b7v,PrEnergySumHc,energy4,m,ULG,,kWh,Stromverbrauch Heizung gesamt
MsgDef('b7v', 'PrEnergySumHc', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Stromverbrauch Heizung gesamt')

r,b7v,PrEnergySumHcLastMonth,,s,IGN:4,,,,energy4,s,ULG,,kWh,Letzter Monat Stromverbrauch Heizung
MsgDef('b7v', 'PrEnergySumHcLastMonth', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Letzter Monat Stromverbrauch Heizung')

w,b7v,PrEnergySumHcLastMonth,energy4,m,ULG,,kWh,Letzter Monat Stromverbrauch Heizung
MsgDef('b7v', 'PrEnergySumHcLastMonth', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Letzter Monat Stromverbrauch Heizung')

r,b7v,PrEnergySumHcThisMonth,,s,IGN:4,,,,energy4,s,ULG,,kWh,Aktueller Monat Stromverbrauch Heizung
MsgDef('b7v', 'PrEnergySumHcThisMonth', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Aktueller Monat Stromverbrauch Heizung')

w,b7v,PrEnergySumHcThisMonth,energy4,m,ULG,,kWh,Aktueller Monat Stromverbrauch Heizung
MsgDef('b7v', 'PrEnergySumHcThisMonth', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Aktueller Monat Stromverbrauch Heizung')

r,b7v,PrEnergySumHwc,,s,IGN:4,,,,energy4,s,ULG,,kWh,Stromverbrauch hot water gesamt
MsgDef('b7v', 'PrEnergySumHwc', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Stromverbrauch hot water gesamt')

w,b7v,PrEnergySumHwc,energy4,m,ULG,,kWh,Stromverbrauch hot water gesamt
MsgDef('b7v', 'PrEnergySumHwc', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Stromverbrauch hot water gesamt')

r,b7v,PrEnergySumHwcLastMonth,,s,IGN:4,,,,energy4,s,ULG,,kWh,Letzter Monat Stromverbrauch hot water
MsgDef('b7v', 'PrEnergySumHwcLastMonth', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Letzter Monat Stromverbrauch hot water')

w,b7v,PrEnergySumHwcLastMonth,energy4,m,ULG,,kWh,Letzter Monat Stromverbrauch hot water
MsgDef('b7v', 'PrEnergySumHwcLastMonth', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Letzter Monat Stromverbrauch hot water')

r,b7v,PrEnergySumHwcThisMonth,,s,IGN:4,,,,energy4,s,ULG,,kWh,Aktueller Monat Stromverbrauch hot water
MsgDef('b7v', 'PrEnergySumHwcThisMonth', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Aktueller Monat Stromverbrauch hot water')

w,b7v,PrEnergySumHwcThisMonth,energy4,m,ULG,,kWh,Aktueller Monat Stromverbrauch hot water
MsgDef('b7v', 'PrEnergySumHwcThisMonth', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Aktueller Monat Stromverbrauch hot water')

r,b7v,PrFuelSum,,s,IGN:4,,,,energy4,s,ULG,,kWh,Dieses Jahr Brennstoffverbrauch gesamt
MsgDef('b7v', 'PrFuelSum', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Dieses Jahr Brennstoffverbrauch gesamt')

w,b7v,PrFuelSum,energy4,m,ULG,,kWh,Dieses Jahr Brennstoffverbrauch gesamt
MsgDef('b7v', 'PrFuelSum', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Dieses Jahr Brennstoffverbrauch gesamt')

r,b7v,PrFuelSumHc,,s,IGN:4,,,,energy4,s,ULG,,kWh,Brennstoffverbrauch Heizung gesamt
MsgDef('b7v', 'PrFuelSumHc', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Brennstoffverbrauch Heizung gesamt')

w,b7v,PrFuelSumHc,energy4,m,ULG,,kWh,Brennstoffverbrauch Heizung gesamt
MsgDef('b7v', 'PrFuelSumHc', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Brennstoffverbrauch Heizung gesamt')

r,b7v,PrFuelSumHcLastMonth,,s,IGN:4,,,,energy4,s,ULG,,kWh,Letzter Monat Brennstoffverbrauch Heizung
MsgDef('b7v', 'PrFuelSumHcLastMonth', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Letzter Monat Brennstoffverbrauch Heizung')

w,b7v,PrFuelSumHcLastMonth,energy4,m,ULG,,kWh,Letzter Monat Brennstoffverbrauch Heizung
MsgDef('b7v', 'PrFuelSumHcLastMonth', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Letzter Monat Brennstoffverbrauch Heizung')

r,b7v,PrFuelSumHcThisMonth,,s,IGN:4,,,,energy4,s,ULG,,kWh,Aktueller Monat Brennstoffverbrauch Heizung
MsgDef('b7v', 'PrFuelSumHcThisMonth', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Aktueller Monat Brennstoffverbrauch Heizung')

w,b7v,PrFuelSumHcThisMonth,energy4,m,ULG,,kWh,Aktueller Monat Brennstoffverbrauch Heizung
MsgDef('b7v', 'PrFuelSumHcThisMonth', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Aktueller Monat Brennstoffverbrauch Heizung')

r,b7v,PrFuelSumHwc,,s,IGN:4,,,,energy4,s,ULG,,kWh,Brennstoffverbrauch hot water gesamt
MsgDef('b7v', 'PrFuelSumHwc', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Brennstoffverbrauch hot water gesamt')

w,b7v,PrFuelSumHwc,energy4,m,ULG,,kWh,Brennstoffverbrauch hot water gesamt
MsgDef('b7v', 'PrFuelSumHwc', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Brennstoffverbrauch hot water gesamt')

r,b7v,PrFuelSumHwcLastMonth,,s,IGN:4,,,,energy4,s,ULG,,kWh,Letzter Monat Brennstoffverbrauch hot water
MsgDef('b7v', 'PrFuelSumHwcLastMonth', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Letzter Monat Brennstoffverbrauch hot water')

w,b7v,PrFuelSumHwcLastMonth,energy4,m,ULG,,kWh,Letzter Monat Brennstoffverbrauch hot water
MsgDef('b7v', 'PrFuelSumHwcLastMonth', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Letzter Monat Brennstoffverbrauch hot water')

r,b7v,PrFuelSumHwcThisMonth,,s,IGN:4,,,,energy4,s,ULG,,kWh,Aktueller Monat Brennstoffverbrauch hot water
MsgDef('b7v', 'PrFuelSumHwcThisMonth', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Aktueller Monat Brennstoffverbrauch hot water')

w,b7v,PrFuelSumHwcThisMonth,energy4,m,ULG,,kWh,Aktueller Monat Brennstoffverbrauch hot water
MsgDef('b7v', 'PrFuelSumHwcThisMonth', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Aktueller Monat Brennstoffverbrauch hot water')

r,b7v,PumpAdditionalTime,,s,IGN:4,,,,minutes2,s,UIN,,min,Ladepumpe Nachlaufzeit
MsgDef('b7v', 'PumpAdditionalTime', read=True)
    FieldDef(0, 'minutes2', IntType(0, 65534), unit='min', comment='Ladepumpe Nachlaufzeit')

w,b7v,PumpAdditionalTime,minutes2,m,UIN,,min,Ladepumpe Nachlaufzeit
MsgDef('b7v', 'PumpAdditionalTime', write=True)
    FieldDef(0, 'minutes2', IntType(0, 65534), unit='min', comment='Ladepumpe Nachlaufzeit')

r,b7v,SFMode,,s,IGN:4,,,,sfmode,s,UCH,0=auto;1=ventilation;2=party;3=veto;6=load,,
MsgDef('b7v', 'SFMode', read=True)
    FieldDef(0, 'sfmode', EnumType(('auto', 'ventilation', 'party', 'veto', 'load')))

w,b7v,SFMode,sfmode,m,UCH,0=auto;1=ventilation;2=party;3=veto;6=load,,
MsgDef('b7v', 'SFMode', write=True)
    FieldDef(0, 'sfmode', EnumType(('auto', 'ventilation', 'party', 'veto', 'load')))

r,b7v,SolarYieldTotal,,s,IGN:4,,,,energy4,s,ULG,,kWh,Solarertrag gesamt
MsgDef('b7v', 'SolarYieldTotal', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Solarertrag gesamt')

w,b7v,SolarYieldTotal,energy4,m,ULG,,kWh,Solarertrag gesamt
MsgDef('b7v', 'SolarYieldTotal', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Solarertrag gesamt')

r,b7v,SystemFlowTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,Systemvorlauf
MsgDef('b7v', 'SystemFlowTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='Systemvorlauf')

r,b7v,tariffTimer.Friday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'tariffTimer.Friday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,tariffTimer.Friday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'tariffTimer.Friday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,tariffTimer.Monday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'tariffTimer.Monday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,tariffTimer.Monday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'tariffTimer.Monday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,tariffTimer.Saturday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'tariffTimer.Saturday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,tariffTimer.Saturday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'tariffTimer.Saturday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,tariffTimer.Sunday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'tariffTimer.Sunday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,tariffTimer.Sunday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'tariffTimer.Sunday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,tariffTimer.Thursday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'tariffTimer.Thursday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,tariffTimer.Thursday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'tariffTimer.Thursday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,tariffTimer.Tuesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'tariffTimer.Tuesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,tariffTimer.Tuesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'tariffTimer.Tuesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,tariffTimer.Wednesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'tariffTimer.Wednesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,tariffTimer.Wednesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'tariffTimer.Wednesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,Time,,s,IGN:4,,,,,s,HTI,,,Aktuelle Uhrzeit
MsgDef('b7v', 'Time', read=True)
    FieldDef(0, '', TimeType(), comment='Aktuelle Uhrzeit')

w,b7v,Time,,m,HTI,,,Aktuelle Uhrzeit
MsgDef('b7v', 'Time', write=True)
    FieldDef(0, '', TimeType(), comment='Aktuelle Uhrzeit')

r,b7v,ventilationTimer.Friday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Friday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ventilationTimer.Friday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Friday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ventilationTimer.Monday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Monday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ventilationTimer.Monday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Monday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ventilationTimer.Saturday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Saturday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ventilationTimer.Saturday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Saturday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ventilationTimer.Sunday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Sunday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ventilationTimer.Sunday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Sunday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ventilationTimer.Thursday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Thursday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ventilationTimer.Thursday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Thursday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ventilationTimer.Tuesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Tuesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ventilationTimer.Tuesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Tuesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,ventilationTimer.Wednesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Wednesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,ventilationTimer.Wednesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'ventilationTimer.Wednesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,WaterPressure,,s,IGN:4,,,,pressv,s,EXP,,bar,Wasserdruck
MsgDef('b7v', 'WaterPressure', read=True)
    FieldDef(0, 'pressv', FloatType(), unit='bar', comment='Wasserdruck')

r,b7v,YieldTotal,,s,IGN:4,,,,energy4,s,ULG,,kWh,Umweltertrag gesamt
MsgDef('b7v', 'YieldTotal', read=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Umweltertrag gesamt')

w,b7v,YieldTotal,energy4,m,ULG,,kWh,Umweltertrag gesamt
MsgDef('b7v', 'YieldTotal', write=True)
    FieldDef(0, 'energy4', IntType(0, 4294967294), unit='kWh', comment='Umweltertrag gesamt')

r2,b7v,z1ActualRoomTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,current room setpoint considering all basic conditions passed to the control algorithms
MsgDef('b7v', 'z1ActualRoomTempDesired', read=True, prio=2)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current room setpoint considering all basic conditions passed to the control algorithms')

w,b7v,z1ActualRoomTempDesired,tempv,m,EXP,,°C,current room setpoint considering all basic conditions passed to the control algorithms
MsgDef('b7v', 'z1ActualRoomTempDesired', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current room setpoint considering all basic conditions passed to the control algorithms')

r,b7v,z1BankHolidayEndPeriod,,s,IGN:4,,,,hto,s,HDA,,,end date of bank holidays for zone 1
MsgDef('b7v', 'z1BankHolidayEndPeriod', read=True)
    FieldDef(0, 'hto', DateType(), comment='end date of bank holidays for zone 1')

w,b7v,z1BankHolidayEndPeriod,hto,m,HDA,,,end date of bank holidays for zone 1
MsgDef('b7v', 'z1BankHolidayEndPeriod', write=True)
    FieldDef(0, 'hto', DateType(), comment='end date of bank holidays for zone 1')

r,b7v,z1BankHolidayStartPeriod,,s,IGN:4,,,,hfrom,s,HDA,,,start date of bank holidays for zone 1
MsgDef('b7v', 'z1BankHolidayStartPeriod', read=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of bank holidays for zone 1')

w,b7v,z1BankHolidayStartPeriod,hfrom,m,HDA,,,start date of bank holidays for zone 1
MsgDef('b7v', 'z1BankHolidayStartPeriod', write=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of bank holidays for zone 1')

r,b7v,z1CoolingTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,desired cooling setpoint for zone 1
MsgDef('b7v', 'z1CoolingTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='desired cooling setpoint for zone 1')

w,b7v,z1CoolingTemp,tempv,m,EXP,,°C,desired cooling setpoint for zone 1
MsgDef('b7v', 'z1CoolingTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='desired cooling setpoint for zone 1')

r,b7v,z1CoolingTimer.Friday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Friday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1CoolingTimer.Friday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Friday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1CoolingTimer.Monday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Monday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1CoolingTimer.Monday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Monday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1CoolingTimer.Saturday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Saturday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1CoolingTimer.Saturday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Saturday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1CoolingTimer.Sunday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Sunday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1CoolingTimer.Sunday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Sunday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1CoolingTimer.Thursday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Thursday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1CoolingTimer.Thursday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Thursday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1CoolingTimer.Tuesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Tuesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1CoolingTimer.Tuesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Tuesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1CoolingTimer.Wednesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Wednesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1CoolingTimer.Wednesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1CoolingTimer.Wednesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r2,b7v,z1DayTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,day setpoint for zone 1
MsgDef('b7v', 'z1DayTemp', read=True, prio=2)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='day setpoint for zone 1')

w,b7v,z1DayTemp,tempv,m,EXP,,°C,day setpoint for zone 1
MsgDef('b7v', 'z1DayTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='day setpoint for zone 1')

r,b7v,z1HolidayEndPeriod,,s,IGN:4,,,,hto,s,HDA,,,end date of holidays for zone 1
MsgDef('b7v', 'z1HolidayEndPeriod', read=True)
    FieldDef(0, 'hto', DateType(), comment='end date of holidays for zone 1')

w,b7v,z1HolidayEndPeriod,hto,m,HDA,,,end date of holidays for zone 1
MsgDef('b7v', 'z1HolidayEndPeriod', write=True)
    FieldDef(0, 'hto', DateType(), comment='end date of holidays for zone 1')

r,b7v,z1HolidayStartPeriod,,s,IGN:4,,,,hfrom,s,HDA,,,start date of holidays for zone 1
MsgDef('b7v', 'z1HolidayStartPeriod', read=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of holidays for zone 1')

w,b7v,z1HolidayStartPeriod,hfrom,m,HDA,,,start date of holidays for zone 1
MsgDef('b7v', 'z1HolidayStartPeriod', write=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of holidays for zone 1')

r,b7v,z1HolidayTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,holiday setpoint for zone 1
MsgDef('b7v', 'z1HolidayTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='holiday setpoint for zone 1')

w,b7v,z1HolidayTemp,tempv,m,EXP,,°C,holiday setpoint for zone 1
MsgDef('b7v', 'z1HolidayTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='holiday setpoint for zone 1')

r,b7v,z1Name1,,s,IGN:4,,,,zname,s,STR:5,,,name of zone 1
MsgDef('b7v', 'z1Name1', read=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 1')

w,b7v,z1Name1,zname,m,STR:5,,,name of zone 1
MsgDef('b7v', 'z1Name1', write=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 1')

r,b7v,z1Name2,,s,IGN:4,,,,zname,s,STR:5,,,name of zone 1
MsgDef('b7v', 'z1Name2', read=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 1')

w,b7v,z1Name2,zname,m,STR:5,,,name of zone 1
MsgDef('b7v', 'z1Name2', write=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 1')

r2,b7v,z1NightTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,night setpoint for zone 1
MsgDef('b7v', 'z1NightTemp', read=True, prio=2)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='night setpoint for zone 1')

w,b7v,z1NightTemp,tempv,m,EXP,,°C,night setpoint for zone 1
MsgDef('b7v', 'z1NightTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='night setpoint for zone 1')

r,b7v,z1OpMode,,s,IGN:4,,,,opmode,s,UIN,0=off;1=auto;2=day;3=night,,operation mode of zone 1
MsgDef('b7v', 'z1OpMode', read=True)
    FieldDef(0, 'opmode', EnumType(('off', 'auto', 'day', 'night')), comment='operation mode of zone 1')

w,b7v,z1OpMode,opmode,m,UIN,0=off;1=auto;2=day;3=night,,operation mode of zone 1
MsgDef('b7v', 'z1OpMode', write=True)
    FieldDef(0, 'opmode', EnumType(('off', 'auto', 'day', 'night')), comment='operation mode of zone 1')

r,b7v,z1QuickVetoTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,manual override setpoint for zone 1
MsgDef('b7v', 'z1QuickVetoTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='manual override setpoint for zone 1')

w,b7v,z1QuickVetoTemp,tempv,m,EXP,,°C,manual override setpoint for zone 1
MsgDef('b7v', 'z1QuickVetoTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='manual override setpoint for zone 1')

r1,b7v,z1RoomTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,current room temperature in zone 1
MsgDef('b7v', 'z1RoomTemp', read=True, prio=1)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current room temperature in zone 1')

r,b7v,z1RoomZoneMapping,,s,IGN:4,,,,zmapping,s,UIN,0=none;1=VRC700;2=VR91.1;3=VR91.2;4=VR91.3,,configures which room temperature is assigned to zone 1
MsgDef('b7v', 'z1RoomZoneMapping', read=True)
    FieldDef(0, 'zmapping', EnumType(('none', 'VRC700', 'VR91.1', 'VR91.2', 'VR91.3')), comment='configures which room temperature is assigned to zone 1')

w,b7v,z1RoomZoneMapping,zmapping,m,UIN,0=none;1=VRC700;2=VR91.1;3=VR91.2;4=VR91.3,,configures which room temperature is assigned to zone 1
MsgDef('b7v', 'z1RoomZoneMapping', write=True)
    FieldDef(0, 'zmapping', EnumType(('none', 'VRC700', 'VR91.1', 'VR91.2', 'VR91.3')), comment='configures which room temperature is assigned to zone 1')

r,b7v,z1SFMode,,s,IGN:4,,,,sfmode,s,UCH,0=auto;1=ventilation;2=party;3=veto;6=load,,
MsgDef('b7v', 'z1SFMode', read=True)
    FieldDef(0, 'sfmode', EnumType(('auto', 'ventilation', 'party', 'veto', 'load')))

w,b7v,z1SFMode,sfmode,m,UCH,0=auto;1=ventilation;2=party;3=veto;6=load,,
MsgDef('b7v', 'z1SFMode', write=True)
    FieldDef(0, 'sfmode', EnumType(('auto', 'ventilation', 'party', 'veto', 'load')))

r,b7v,z1Shortname,,s,IGN:4,,,,shortname,s,STR:6,,,short name of zone 1
MsgDef('b7v', 'z1Shortname', read=True)
    FieldDef(0, 'shortname', StrType(length=6), comment='short name of zone 1')

w,b7v,z1Shortname,shortname,m,STR:6,,,short name of zone 1
MsgDef('b7v', 'z1Shortname', write=True)
    FieldDef(0, 'shortname', StrType(length=6), comment='short name of zone 1')

r,b7v,z1Timer.Friday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1Timer.Friday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1Timer.Friday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1Timer.Friday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1Timer.Monday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1Timer.Monday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1Timer.Monday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1Timer.Monday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1Timer.Saturday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1Timer.Saturday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1Timer.Saturday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1Timer.Saturday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1Timer.Sunday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1Timer.Sunday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1Timer.Sunday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1Timer.Sunday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1Timer.Thursday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1Timer.Thursday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1Timer.Thursday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1Timer.Thursday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1Timer.Tuesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1Timer.Tuesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1Timer.Tuesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1Timer.Tuesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1Timer.Wednesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z1Timer.Wednesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z1Timer.Wednesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z1Timer.Wednesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z1ValveStatus,,s,IGN:4,,,,,s,UCH,,,valve status of zone 1
MsgDef('b7v', 'z1ValveStatus', read=True)
    FieldDef(0, '', IntType(0, 254), comment='valve status of zone 1')

w,b7v,z1ValveStatus,,m,UCH,,,valve status of zone 1
MsgDef('b7v', 'z1ValveStatus', write=True)
    FieldDef(0, '', IntType(0, 254), comment='valve status of zone 1')

r,b7v,z2ActualRoomTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,current room setpoint considering all basic conditions passed to the control algorithms
MsgDef('b7v', 'z2ActualRoomTempDesired', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current room setpoint considering all basic conditions passed to the control algorithms')

w,b7v,z2ActualRoomTempDesired,tempv,m,EXP,,°C,current room setpoint considering all basic conditions passed to the control algorithms
MsgDef('b7v', 'z2ActualRoomTempDesired', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current room setpoint considering all basic conditions passed to the control algorithms')

r,b7v,z2BankHolidayEndPeriod,,s,IGN:4,,,,hto,s,HDA,,,end date of bank holidays for zone 2
MsgDef('b7v', 'z2BankHolidayEndPeriod', read=True)
    FieldDef(0, 'hto', DateType(), comment='end date of bank holidays for zone 2')

w,b7v,z2BankHolidayEndPeriod,hto,m,HDA,,,end date of bank holidays for zone 2
MsgDef('b7v', 'z2BankHolidayEndPeriod', write=True)
    FieldDef(0, 'hto', DateType(), comment='end date of bank holidays for zone 2')

r,b7v,z2BankHolidayStartPeriod,,s,IGN:4,,,,hfrom,s,HDA,,,start date of bank holidays for zone 2
MsgDef('b7v', 'z2BankHolidayStartPeriod', read=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of bank holidays for zone 2')

w,b7v,z2BankHolidayStartPeriod,hfrom,m,HDA,,,start date of bank holidays for zone 2
MsgDef('b7v', 'z2BankHolidayStartPeriod', write=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of bank holidays for zone 2')

r,b7v,z2CoolingTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,desired cooling setpoint for zone 2
MsgDef('b7v', 'z2CoolingTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='desired cooling setpoint for zone 2')

w,b7v,z2CoolingTemp,tempv,m,EXP,,°C,desired cooling setpoint for zone 2
MsgDef('b7v', 'z2CoolingTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='desired cooling setpoint for zone 2')

r,b7v,z2CoolingTimer.Friday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Friday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2CoolingTimer.Friday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Friday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2CoolingTimer.Monday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Monday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2CoolingTimer.Monday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Monday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2CoolingTimer.Saturday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Saturday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2CoolingTimer.Saturday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Saturday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2CoolingTimer.Sunday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Sunday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2CoolingTimer.Sunday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Sunday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2CoolingTimer.Thursday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Thursday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2CoolingTimer.Thursday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Thursday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2CoolingTimer.Tuesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Tuesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2CoolingTimer.Tuesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Tuesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2CoolingTimer.Wednesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Wednesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2CoolingTimer.Wednesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2CoolingTimer.Wednesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2DayTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,day setpoint for zone 2
MsgDef('b7v', 'z2DayTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='day setpoint for zone 2')

w,b7v,z2DayTemp,tempv,m,EXP,,°C,day setpoint for zone 2
MsgDef('b7v', 'z2DayTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='day setpoint for zone 2')

r,b7v,z2HolidayEndPeriod,,s,IGN:4,,,,hto,s,HDA,,,end date of holidays for zone 2
MsgDef('b7v', 'z2HolidayEndPeriod', read=True)
    FieldDef(0, 'hto', DateType(), comment='end date of holidays for zone 2')

w,b7v,z2HolidayEndPeriod,hto,m,HDA,,,end date of holidays for zone 2
MsgDef('b7v', 'z2HolidayEndPeriod', write=True)
    FieldDef(0, 'hto', DateType(), comment='end date of holidays for zone 2')

r,b7v,z2HolidayStartPeriod,,s,IGN:4,,,,hfrom,s,HDA,,,start date of holidays for zone 2
MsgDef('b7v', 'z2HolidayStartPeriod', read=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of holidays for zone 2')

w,b7v,z2HolidayStartPeriod,hfrom,m,HDA,,,start date of holidays for zone 2
MsgDef('b7v', 'z2HolidayStartPeriod', write=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of holidays for zone 2')

r,b7v,z2HolidayTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,holiday setpoint for zone 2
MsgDef('b7v', 'z2HolidayTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='holiday setpoint for zone 2')

w,b7v,z2HolidayTemp,tempv,m,EXP,,°C,holiday setpoint for zone 2
MsgDef('b7v', 'z2HolidayTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='holiday setpoint for zone 2')

r,b7v,z2Name1,,s,IGN:4,,,,zname,s,STR:5,,,name of zone 2
MsgDef('b7v', 'z2Name1', read=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 2')

w,b7v,z2Name1,zname,m,STR:5,,,name of zone 2
MsgDef('b7v', 'z2Name1', write=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 2')

r,b7v,z2Name2,,s,IGN:4,,,,zname,s,STR:5,,,name of zone 2
MsgDef('b7v', 'z2Name2', read=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 2')

w,b7v,z2Name2,zname,m,STR:5,,,name of zone 2
MsgDef('b7v', 'z2Name2', write=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 2')

r,b7v,z2NightTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,night setpoint for zone 2
MsgDef('b7v', 'z2NightTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='night setpoint for zone 2')

w,b7v,z2NightTemp,tempv,m,EXP,,°C,night setpoint for zone 2
MsgDef('b7v', 'z2NightTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='night setpoint for zone 2')

r,b7v,z2OpMode,,s,IGN:4,,,,opmode,s,UIN,0=off;1=auto;2=day;3=night,,operation mode of zone 2
MsgDef('b7v', 'z2OpMode', read=True)
    FieldDef(0, 'opmode', EnumType(('off', 'auto', 'day', 'night')), comment='operation mode of zone 2')

w,b7v,z2OpMode,opmode,m,UIN,0=off;1=auto;2=day;3=night,,operation mode of zone 2
MsgDef('b7v', 'z2OpMode', write=True)
    FieldDef(0, 'opmode', EnumType(('off', 'auto', 'day', 'night')), comment='operation mode of zone 2')

r,b7v,z2QuickVetoTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,manual override setpoint for zone 2
MsgDef('b7v', 'z2QuickVetoTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='manual override setpoint for zone 2')

w,b7v,z2QuickVetoTemp,tempv,m,EXP,,°C,manual override setpoint for zone 2
MsgDef('b7v', 'z2QuickVetoTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='manual override setpoint for zone 2')

r,b7v,z2RoomTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,current room temperature in zone 2
MsgDef('b7v', 'z2RoomTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current room temperature in zone 2')

r,b7v,z2RoomZoneMapping,,s,IGN:4,,,,zmapping,s,UIN,0=none;1=VRC700;2=VR91.1;3=VR91.2;4=VR91.3,,configures which room temperature is assigned to zone 2
MsgDef('b7v', 'z2RoomZoneMapping', read=True)
    FieldDef(0, 'zmapping', EnumType(('none', 'VRC700', 'VR91.1', 'VR91.2', 'VR91.3')), comment='configures which room temperature is assigned to zone 2')

w,b7v,z2RoomZoneMapping,zmapping,m,UIN,0=none;1=VRC700;2=VR91.1;3=VR91.2;4=VR91.3,,configures which room temperature is assigned to zone 2
MsgDef('b7v', 'z2RoomZoneMapping', write=True)
    FieldDef(0, 'zmapping', EnumType(('none', 'VRC700', 'VR91.1', 'VR91.2', 'VR91.3')), comment='configures which room temperature is assigned to zone 2')

r,b7v,z2SFMode,,s,IGN:4,,,,sfmode,s,UCH,0=auto;1=ventilation;2=party;3=veto;6=load,,
MsgDef('b7v', 'z2SFMode', read=True)
    FieldDef(0, 'sfmode', EnumType(('auto', 'ventilation', 'party', 'veto', 'load')))

w,b7v,z2SFMode,sfmode,m,UCH,0=auto;1=ventilation;2=party;3=veto;6=load,,
MsgDef('b7v', 'z2SFMode', write=True)
    FieldDef(0, 'sfmode', EnumType(('auto', 'ventilation', 'party', 'veto', 'load')))

r,b7v,z2Shortname,,s,IGN:4,,,,shortname,s,STR:6,,,short name of zone 2
MsgDef('b7v', 'z2Shortname', read=True)
    FieldDef(0, 'shortname', StrType(length=6), comment='short name of zone 2')

w,b7v,z2Shortname,shortname,m,STR:6,,,short name of zone 2
MsgDef('b7v', 'z2Shortname', write=True)
    FieldDef(0, 'shortname', StrType(length=6), comment='short name of zone 2')

r,b7v,z2Timer.Friday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2Timer.Friday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2Timer.Friday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2Timer.Friday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2Timer.Monday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2Timer.Monday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2Timer.Monday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2Timer.Monday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2Timer.Saturday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2Timer.Saturday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2Timer.Saturday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2Timer.Saturday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2Timer.Sunday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2Timer.Sunday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2Timer.Sunday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2Timer.Sunday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2Timer.Thursday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2Timer.Thursday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2Timer.Thursday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2Timer.Thursday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2Timer.Tuesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2Timer.Tuesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2Timer.Tuesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2Timer.Tuesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2Timer.Wednesday,,s,IGN:1,,,whether timeslot is valid,from,s,TTM,,,slot 1 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 2 from/to,to,s,TTM,,,to,from,s,TTM,,,slot 3 from/to,to,s,TTM,,,to
MsgDef('b7v', 'z2Timer.Wednesday', read=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

w,b7v,z2Timer.Wednesday,from,m,TTM,,,slot 1 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 2 from/to,to,m,TTM,,,to,from,m,TTM,,,slot 3 from/to,to,m,TTM,,,to
MsgDef('b7v', 'z2Timer.Wednesday', write=True)
    FieldDef(0, 'from.0', HourMinuteType(minres=10), comment='slot 1 from/to')
    FieldDef(1, 'to.0', HourMinuteType(minres=10), comment='to')
    FieldDef(2, 'from.1', HourMinuteType(minres=10), comment='slot 2 from/to')
    FieldDef(3, 'to.1', HourMinuteType(minres=10), comment='to')
    FieldDef(4, 'from.2', HourMinuteType(minres=10), comment='slot 3 from/to')
    FieldDef(5, 'to.2', HourMinuteType(minres=10), comment='to')

r,b7v,z2ValveStatus,,s,IGN:4,,,,,s,UCH,,,valve status of zone 2
MsgDef('b7v', 'z2ValveStatus', read=True)
    FieldDef(0, '', IntType(0, 254), comment='valve status of zone 2')

w,b7v,z2ValveStatus,,m,UCH,,,valve status of zone 2
MsgDef('b7v', 'z2ValveStatus', write=True)
    FieldDef(0, '', IntType(0, 254), comment='valve status of zone 2')

r,b7v,z3ActualRoomTempDesired,,s,IGN:4,,,,tempv,s,EXP,,°C,current room setpoint considering all basic conditions passed to the control algorithms
MsgDef('b7v', 'z3ActualRoomTempDesired', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current room setpoint considering all basic conditions passed to the control algorithms')

w,b7v,z3ActualRoomTempDesired,tempv,m,EXP,,°C,current room setpoint considering all basic conditions passed to the control algorithms
MsgDef('b7v', 'z3ActualRoomTempDesired', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current room setpoint considering all basic conditions passed to the control algorithms')

r,b7v,z3BankHolidayEndPeriod,,s,IGN:4,,,,hto,s,HDA,,,end date of bank holidays for zone 3
MsgDef('b7v', 'z3BankHolidayEndPeriod', read=True)
    FieldDef(0, 'hto', DateType(), comment='end date of bank holidays for zone 3')

w,b7v,z3BankHolidayEndPeriod,hto,m,HDA,,,end date of bank holidays for zone 3
MsgDef('b7v', 'z3BankHolidayEndPeriod', write=True)
    FieldDef(0, 'hto', DateType(), comment='end date of bank holidays for zone 3')

r,b7v,z3BankHolidayStartPeriod,,s,IGN:4,,,,hfrom,s,HDA,,,start date of bank holidays for zone 3
MsgDef('b7v', 'z3BankHolidayStartPeriod', read=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of bank holidays for zone 3')

w,b7v,z3BankHolidayStartPeriod,hfrom,m,HDA,,,start date of bank holidays for zone 3
MsgDef('b7v', 'z3BankHolidayStartPeriod', write=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of bank holidays for zone 3')

r,b7v,z3DayTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,day setpoint for zone 3
MsgDef('b7v', 'z3DayTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='day setpoint for zone 3')

w,b7v,z3DayTemp,tempv,m,EXP,,°C,day setpoint for zone 3
MsgDef('b7v', 'z3DayTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='day setpoint for zone 3')

r,b7v,z3HolidayEndPeriod,,s,IGN:4,,,,hto,s,HDA,,,end date of holidays for zone 3
MsgDef('b7v', 'z3HolidayEndPeriod', read=True)
    FieldDef(0, 'hto', DateType(), comment='end date of holidays for zone 3')

w,b7v,z3HolidayEndPeriod,hto,m,HDA,,,end date of holidays for zone 3
MsgDef('b7v', 'z3HolidayEndPeriod', write=True)
    FieldDef(0, 'hto', DateType(), comment='end date of holidays for zone 3')

r,b7v,z3HolidayStartPeriod,,s,IGN:4,,,,hfrom,s,HDA,,,start date of holidays for zone 3
MsgDef('b7v', 'z3HolidayStartPeriod', read=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of holidays for zone 3')

w,b7v,z3HolidayStartPeriod,hfrom,m,HDA,,,start date of holidays for zone 3
MsgDef('b7v', 'z3HolidayStartPeriod', write=True)
    FieldDef(0, 'hfrom', DateType(), comment='start date of holidays for zone 3')

r,b7v,z3HolidayTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,holiday setpoint for zone 3
MsgDef('b7v', 'z3HolidayTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='holiday setpoint for zone 3')

w,b7v,z3HolidayTemp,tempv,m,EXP,,°C,holiday setpoint for zone 3
MsgDef('b7v', 'z3HolidayTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='holiday setpoint for zone 3')

r,b7v,z3Name1,,s,IGN:4,,,,zname,s,STR:5,,,name of zone 3
MsgDef('b7v', 'z3Name1', read=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 3')

w,b7v,z3Name1,zname,m,STR:5,,,name of zone 3
MsgDef('b7v', 'z3Name1', write=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 3')

r,b7v,z3Name2,,s,IGN:4,,,,zname,s,STR:5,,,name of zone 3
MsgDef('b7v', 'z3Name2', read=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 3')

w,b7v,z3Name2,zname,m,STR:5,,,name of zone 3
MsgDef('b7v', 'z3Name2', write=True)
    FieldDef(0, 'zname', StrType(length=5), comment='name of zone 3')

r,b7v,z3NightTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,night setpoint for zone 3
MsgDef('b7v', 'z3NightTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='night setpoint for zone 3')

w,b7v,z3NightTemp,tempv,m,EXP,,°C,night setpoint for zone 3
MsgDef('b7v', 'z3NightTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='night setpoint for zone 3')

r,b7v,z3OpMode,,s,IGN:4,,,,opmode,s,UIN,0=off;1=auto;2=day;3=night,,operation mode of zone 3
MsgDef('b7v', 'z3OpMode', read=True)
    FieldDef(0, 'opmode', EnumType(('off', 'auto', 'day', 'night')), comment='operation mode of zone 3')

w,b7v,z3OpMode,opmode,m,UIN,0=off;1=auto;2=day;3=night,,operation mode of zone 3
MsgDef('b7v', 'z3OpMode', write=True)
    FieldDef(0, 'opmode', EnumType(('off', 'auto', 'day', 'night')), comment='operation mode of zone 3')

r,b7v,z3QuickVetoTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,manual override setpoint for zone 3
MsgDef('b7v', 'z3QuickVetoTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='manual override setpoint for zone 3')

w,b7v,z3QuickVetoTemp,tempv,m,EXP,,°C,manual override setpoint for zone 3
MsgDef('b7v', 'z3QuickVetoTemp', write=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='manual override setpoint for zone 3')

r,b7v,z3RoomTemp,,s,IGN:4,,,,tempv,s,EXP,,°C,current room temperature in zone 3
MsgDef('b7v', 'z3RoomTemp', read=True)
    FieldDef(0, 'tempv', FloatType(), unit='°C', comment='current room temperature in zone 3')

r,b7v,z3RoomZoneMapping,,s,IGN:4,,,,zmapping,s,UIN,0=none;1=VRC700;2=VR91.1;3=VR91.2;4=VR91.3,,configures which room temperature is assigned to zone 3
MsgDef('b7v', 'z3RoomZoneMapping', read=True)
    FieldDef(0, 'zmapping', EnumType(('none', 'VRC700', 'VR91.1', 'VR91.2', 'VR91.3')), comment='configures which room temperature is assigned to zone 3')

w,b7v,z3RoomZoneMapping,zmapping,m,UIN,0=none;1=VRC700;2=VR91.1;3=VR91.2;4=VR91.3,,configures which room temperature is assigned to zone 3
MsgDef('b7v', 'z3RoomZoneMapping', write=True)
    FieldDef(0, 'zmapping', EnumType(('none', 'VRC700', 'VR91.1', 'VR91.2', 'VR91.3')), comment='configures which room temperature is assigned to zone 3')

r,b7v,z3SFMode,,s,IGN:4,,,,sfmode,s,UCH,0=auto;1=ventilation;2=party;3=veto;6=load,,
MsgDef('b7v', 'z3SFMode', read=True)
    FieldDef(0, 'sfmode', EnumType(('auto', 'ventilation', 'party', 'veto', 'load')))

w,b7v,z3SFMode,sfmode,m,UCH,0=auto;1=ventilation;2=party;3=veto;6=load,,
MsgDef('b7v', 'z3SFMode', write=True)
    FieldDef(0, 'sfmode', EnumType(('auto', 'ventilation', 'party', 'veto', 'load')))

r,b7v,z3Shortname,,s,IGN:4,,,,shortname,s,STR:6,,,short name of zone 3
MsgDef('b7v', 'z3Shortname', read=True)
    FieldDef(0, 'shortname', StrType(length=6), comment='short name of zone 3')

w,b7v,z3Shortname,shortname,m,STR:6,,,short name of zone 3
MsgDef('b7v', 'z3Shortname', write=True)
    FieldDef(0, 'shortname', StrType(length=6), comment='short name of zone 3')

r,b7v,z3ValveStatus,,s,IGN:4,,,,,s,UCH,,,valve status of zone 3
MsgDef('b7v', 'z3ValveStatus', read=True)
    FieldDef(0, '', IntType(0, 254), comment='valve status of zone 3')

w,b7v,z3ValveStatus,,m,UCH,,,valve status of zone 3
MsgDef('b7v', 'z3ValveStatus', write=True)
    FieldDef(0, '', IntType(0, 254), comment='valve status of zone 3')

r,bai,AccessoriesOne,,s,UCH,1=circulationpump;2=extheatingpump;3=storagechargingpump;4=fluegasflapextractorhood;5=externalgasvalve;6=externalerrormessage;7=solarpump;8=remotecontrol,,Function of accessory relay 1
MsgDef('bai', 'AccessoriesOne', read=True)
    FieldDef(0, '', EnumType(('circulationpump', 'extheatingpump', 'storagechargingpump', 'fluegasflapextractorhood', 'externalgasvalve', 'externalerrormessage', 'solarpump', 'remotecontrol')), comment='Function of accessory relay 1')

w,bai,AccessoriesOne,,m,UCH,1=circulationpump;2=extheatingpump;3=storagechargingpump;4=fluegasflapextractorhood;5=externalgasvalve;6=externalerrormessage;7=solarpump;8=remotecontrol,,Function of accessory relay 1
MsgDef('bai', 'AccessoriesOne', write=True)
    FieldDef(0, '', EnumType(('circulationpump', 'extheatingpump', 'storagechargingpump', 'fluegasflapextractorhood', 'externalgasvalve', 'externalerrormessage', 'solarpump', 'remotecontrol')), comment='Function of accessory relay 1')

r,bai,AccessoriesTwo,,s,UCH,1=circulationpump;2=extheatingpump;3=storagechargingpump;4=fluegasflapextractorhood;5=externalgasvalve;6=externalerrormessage;7=solarpump;8=remotecontrol,,Function of accessory relay 2
MsgDef('bai', 'AccessoriesTwo', read=True)
    FieldDef(0, '', EnumType(('circulationpump', 'extheatingpump', 'storagechargingpump', 'fluegasflapextractorhood', 'externalgasvalve', 'externalerrormessage', 'solarpump', 'remotecontrol')), comment='Function of accessory relay 2')

w,bai,AccessoriesTwo,,m,UCH,1=circulationpump;2=extheatingpump;3=storagechargingpump;4=fluegasflapextractorhood;5=externalgasvalve;6=externalerrormessage;7=solarpump;8=remotecontrol,,Function of accessory relay 2
MsgDef('bai', 'AccessoriesTwo', write=True)
    FieldDef(0, '', EnumType(('circulationpump', 'extheatingpump', 'storagechargingpump', 'fluegasflapextractorhood', 'externalgasvalve', 'externalerrormessage', 'solarpump', 'remotecontrol')), comment='Function of accessory relay 2')

r,bai,ACRoomthermostat,onoff,s,UCH,0=off;1=on,,External controls heat demand (Clamp 3-4)
MsgDef('bai', 'ACRoomthermostat', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='External controls heat demand (Clamp 3-4)')

r,bai,AntiCondensValue,,s,UCH,,kW / %,Minimal power to avoid condensation
MsgDef('bai', 'AntiCondensValue', read=True)
    FieldDef(0, '', IntType(0, 254), unit='kW / %', comment='Minimal power to avoid condensation')

w,bai,AntiCondensValue,,m,UCH,,kW / %,Minimal power to avoid condensation
MsgDef('bai', 'AntiCondensValue', write=True)
    FieldDef(0, '', IntType(0, 254), unit='kW / %', comment='Minimal power to avoid condensation')

[SW>=413]r,bai,APCComStatus,,s,UCH,,,actoSTORE communication status
MsgDef('bai', 'APCComStatus', update=True)
    FieldDef(0, '', IntType(0, 254), comment='actoSTORE communication status')

[SW>=413]r,bai,APCLegioProtection,,s,UCH,,,Legionella protection for internal storage
MsgDef('bai', 'APCLegioProtection', update=True)
    FieldDef(0, '', IntType(0, 254), comment='Legionella protection for internal storage')

[SW>=413]w,bai,APCLegioProtection,,m,UCH,,,Legionella protection for internal storage
MsgDef('bai', 'APCLegioProtection', write=True, update=True)
    FieldDef(0, '', IntType(0, 254), comment='Legionella protection for internal storage')

r,bai,averageIgnitiontime,,s,UCH,10,s,Average ignition time
MsgDef('bai', 'averageIgnitiontime', read=True)
    FieldDef(0, '', IntType(0, 25.4, divider=10), unit='s', comment='Average ignition time')

r,bai,BlockTimeHcMax,minutes0,s,UCH,,min,Maximum burner anti cycling period at 20°C flow temperature set point
MsgDef('bai', 'BlockTimeHcMax', read=True)
    FieldDef(0, 'minutes0', IntType(0, 254), unit='min', comment='Maximum burner anti cycling period at 20°C flow temperature set point')

w,bai,BlockTimeHcMax,minutes0,m,UCH,,min,Maximum burner anti cycling period at 20°C flow temperature set point
MsgDef('bai', 'BlockTimeHcMax', write=True)
    FieldDef(0, 'minutes0', IntType(0, 254), unit='min', comment='Maximum burner anti cycling period at 20°C flow temperature set point')

r,bai,BoilerType,,s,UCH,,,Boiler typ of the BMU
MsgDef('bai', 'BoilerType', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Boiler typ of the BMU')

r,bai,ChangesDSN,,s,UCH,,,Numbers adjusting (storing) the DSN
MsgDef('bai', 'ChangesDSN', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Numbers adjusting (storing) the DSN')

r1,bai,CirPump,onoff,s,UCH,0=off;1=on,,Hot water circulation pump (via external module)
MsgDef('bai', 'CirPump', read=True, prio=1)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Hot water circulation pump (via external module)')

w,bai,clearerrorhistory,cleared,s,UCH,0=no;1=yes,,
MsgDef('bai', 'clearerrorhistory', write=True)
    FieldDef(0, 'cleared', EnumType(('no', 'yes')))

r,bai,CodingResistor,,s,HEX:3,,,boiler identification resistor
MsgDef('bai', 'CodingResistor', read=True)
    FieldDef(0, '', HexType(length=3), comment='boiler identification resistor')

r,bai,CounterStartattempts1,temp0,s,UCH,,°C,Number of unsuccessful ignition attempts (in the first attempt)
MsgDef('bai', 'CounterStartattempts1', read=True)
    FieldDef(0, 'temp0', IntType(0, 254), unit='°C', comment='Number of unsuccessful ignition attempts (in the first attempt)')

r,bai,CounterStartattempts2,temp0,s,UCH,,°C,Number of unsuccessful ignition attempts (in the second attempt)
MsgDef('bai', 'CounterStartattempts2', read=True)
    FieldDef(0, 'temp0', IntType(0, 254), unit='°C', comment='Number of unsuccessful ignition attempts (in the second attempt)')

r,bai,CounterStartAttempts3,temp0,s,UCH,,°C,Number of unsuccessful ignition attempts (in the 3rd attempt)
MsgDef('bai', 'CounterStartAttempts3', read=True)
    FieldDef(0, 'temp0', IntType(0, 254), unit='°C', comment='Number of unsuccessful ignition attempts (in the 3rd attempt)')

r,bai,CounterStartAttempts4,temp0,s,UCH,,°C,Number of unsuccessful ignition attempts (in the 4th attempt)
MsgDef('bai', 'CounterStartAttempts4', read=True)
    FieldDef(0, 'temp0', IntType(0, 254), unit='°C', comment='Number of unsuccessful ignition attempts (in the 4th attempt)')

r,bai,currenterror,error,s,UIN,,,error number,error,s,UIN,,,error number,error,s,UIN,,,error number,error,s,UIN,,,error number,error,s,UIN,,,error number
MsgDef('bai', 'currenterror', read=True)
    FieldDef(0, 'error.0', IntType(0, 65534), comment='error number')
    FieldDef(1, 'error.1', IntType(0, 65534), comment='error number')
    FieldDef(2, 'error.2', IntType(0, 65534), comment='error number')
    FieldDef(3, 'error.3', IntType(0, 65534), comment='error number')
    FieldDef(4, 'error.4', IntType(0, 65534), comment='error number')

r,bai,DateTime,dcfstate,s,UCH,0=nosignal;1=ok;2=sync;3=valid,,DCF receiver state,btime,s,BTI,,,time,bdate,s,BDA,,,date,temp2,s,D2B,,°C,temperature
MsgDef('bai', 'DateTime', read=True)
    FieldDef(0, 'dcfstate', EnumType(('nosignal', 'ok', 'sync', 'valid')), comment='DCF receiver state')
    FieldDef(1, 'btime', TimeType(), comment='time')
    FieldDef(2, 'bdate', DateType(), comment='date')
    FieldDef(3, 'temp2', IntType(-127.99, 127.99, divider=256), unit='°C', comment='temperature')
    VirtFieldDef('bdate+btime+dcfstate', DateTimeType())

r,bai,dcfState,dcfstate,s,UCH,0=nosignal;1=ok;2=sync;3=valid,,DCF Status
MsgDef('bai', 'dcfState', read=True)
    FieldDef(0, 'dcfstate', EnumType(('nosignal', 'ok', 'sync', 'valid')), comment='DCF Status')

r,bai,DCFTimeDate,,s,VTI,,,DCF Time / date stamp struct { uchar sec; uchar min; uchar std; uchar tag; uchar mon; uchar wtg; uchar jah; } Tdcf77_time;,,s,HDA,,,
MsgDef('bai', 'DCFTimeDate', read=True)
    FieldDef(0, '.0', TimeType(), comment='DCF Time / date stamp struct { uchar sec; uchar min; uchar std; uchar tag; uchar mon; uchar wtg; uchar jah; } Tdcf77_time;')
    FieldDef(1, '.1', DateType())
    VirtFieldDef('.1+.0', DateTimeType())

r,bai,DCRoomthermostat,onoff,s,UCH,0=off;1=on,,xternal controls heat demand (Clamp 3-4)
MsgDef('bai', 'DCRoomthermostat', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='xternal controls heat demand (Clamp 3-4)')

r,bai,DeactivationsIFC,,s,UCH,,,Number of ignition failures (unsuccessful last-run or faulty flame signal)
MsgDef('bai', 'DeactivationsIFC', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Number of ignition failures (unsuccessful last-run or faulty flame signal)')

r,bai,DeactivationsTemplimiter,,s,UCH,,,Number of shutdowns by the safety temperature limiter
MsgDef('bai', 'DeactivationsTemplimiter', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Number of shutdowns by the safety temperature limiter')

r,bai,DeltaFlowReturnMax,temp,s,D2C,,°C,Maintenance data
MsgDef('bai', 'DeltaFlowReturnMax', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Maintenance data')

r,bai,DisplayMode,,s,UCH,,,Display mode of the appliance
MsgDef('bai', 'DisplayMode', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Display mode of the appliance')

r,bai,DSN,,s,UIN,,,DSN: Device Specific number
MsgDef('bai', 'DSN', read=True)
    FieldDef(0, '', IntType(0, 65534), comment='DSN: Device Specific number')

r,bai,DSNOffset,,s,UCH,,,Hardware ID (DSN)
MsgDef('bai', 'DSNOffset', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Hardware ID (DSN)')

w,bai,DSNOffset,,m,UCH,,,Hardware ID (DSN)
MsgDef('bai', 'DSNOffset', write=True)
    FieldDef(0, '', IntType(0, 254), comment='Hardware ID (DSN)')

r,bai,DSNStart,,s,UIN,,,DSN starting address
MsgDef('bai', 'DSNStart', read=True)
    FieldDef(0, '', IntType(0, 65534), comment='DSN starting address')

r,bai,EBusHeatcontrol,yesno,s,UCH,0=no;1=yes,,Digital regulator status
MsgDef('bai', 'EBusHeatcontrol', read=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='Digital regulator status')

r,bai,EbusSourceOn,onoff,s,UCH,0=off;1=on,,Activation signal of the eBus source
MsgDef('bai', 'EbusSourceOn', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Activation signal of the eBus source')

r,bai,EbusVoltage,onoff,s,UCH,0=off;1=on,,eBUS voltage feedback
MsgDef('bai', 'EbusVoltage', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='eBUS voltage feedback')

r,bai,errorhistory,index,m,UCH,,,,status,s,UCH,,,Status,time2,s,VTM,,,time,date,s,HDA,,,date,error,s,UIN,,,error number
MsgDef('bai', 'errorhistory', read=True)
    FieldDef(0, 'index', IntType(0, 254))
    FieldDef(1, 'status', IntType(0, 254), comment='Status')
    FieldDef(2, 'time2', HourMinuteType(), comment='time')
    FieldDef(3, 'date', DateType(), comment='date')
    FieldDef(4, 'error', IntType(0, 65534), comment='error number')
    VirtFieldDef('date+time2', DateTimeType())

r,bai,ExternalFaultmessage,onoff,s,UCH,0=off;1=on,,External fault message
MsgDef('bai', 'ExternalFaultmessage', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='External fault message')

r,bai,externalHwcSwitch,onoff,s,UCH,0=off;1=on,,Demand external HWC tank (via contact)
MsgDef('bai', 'externalHwcSwitch', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Demand external HWC tank (via contact)')

r,bai,ExternGasvalve,onoff,s,UCH,0=off;1=on,,External solenoid valve
MsgDef('bai', 'ExternGasvalve', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='External solenoid valve')

r,bai,ExtFlowTempDesiredMin,temp,s,D2C,,°C,minimum out of Kl.7 and eBus flow setpoint
MsgDef('bai', 'ExtFlowTempDesiredMin', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='minimum out of Kl.7 and eBus flow setpoint')

r,bai,ExtStorageModulCon,yesno,s,UCH,0=no;1=yes,,External memory module (VR65) connected
MsgDef('bai', 'ExtStorageModulCon', read=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='External memory module (VR65) connected')

r1,bai,extWP,onoff,s,UCH,0=off;1=on,,External central heating pump
MsgDef('bai', 'extWP', read=True, prio=1)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='External central heating pump')

r,bai,FanHours,hoursum2,s,UIN,,h,Operating hours of the fan
MsgDef('bai', 'FanHours', read=True)
    FieldDef(0, 'hoursum2', IntType(0, 65534), unit='h', comment='Operating hours of the fan')

r,bai,FanMaxSpeedOperation,,s,UIN,,1/min,Fan maximum speed
MsgDef('bai', 'FanMaxSpeedOperation', read=True)
    FieldDef(0, '', IntType(0, 65534), unit='1/min', comment='Fan maximum speed')

r,bai,FanMinSpeedOperation,,s,UIN,,1/min,Fan minimum speed
MsgDef('bai', 'FanMinSpeedOperation', read=True)
    FieldDef(0, '', IntType(0, 65534), unit='1/min', comment='Fan minimum speed')

r,bai,FanPWMSum,,s,UIN,,,Predictive Maintenance data for the fan damage recognition
MsgDef('bai', 'FanPWMSum', read=True)
    FieldDef(0, '', IntType(0, 65534), comment='Predictive Maintenance data for the fan damage recognition')

r,bai,FanPWMTest,,s,UCH,,,Predictive Maintenance data for the fan damage recognition
MsgDef('bai', 'FanPWMTest', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Predictive Maintenance data for the fan damage recognition')

r,bai,FanSpeed,,s,UIN,,1/min,Current fan speed
MsgDef('bai', 'FanSpeed', read=True)
    FieldDef(0, '', IntType(0, 65534), unit='1/min', comment='Current fan speed')

r,bai,FanSpeedOffsetMax,,s,SIN,,1/min,Fan maximum speed offset
MsgDef('bai', 'FanSpeedOffsetMax', read=True)
    FieldDef(0, '', IntType(-32767, 32767), unit='1/min', comment='Fan maximum speed offset')

w,bai,FanSpeedOffsetMax,,m,SIN,,1/min,Fan maximum speed offset
MsgDef('bai', 'FanSpeedOffsetMax', write=True)
    FieldDef(0, '', IntType(-32767, 32767), unit='1/min', comment='Fan maximum speed offset')

r,bai,FanSpeedOffsetMin,,s,SIN,,1/min,Fan minimum speed offset
MsgDef('bai', 'FanSpeedOffsetMin', read=True)
    FieldDef(0, '', IntType(-32767, 32767), unit='1/min', comment='Fan minimum speed offset')

w,bai,FanSpeedOffsetMin,,m,SIN,,1/min,Fan minimum speed offset
MsgDef('bai', 'FanSpeedOffsetMin', write=True)
    FieldDef(0, '', IntType(-32767, 32767), unit='1/min', comment='Fan minimum speed offset')

r,bai,FanStarts,cntstarts2,s,UIN,,,Number of times fan switched on
MsgDef('bai', 'FanStarts', read=True)
    FieldDef(0, 'cntstarts2', IntType(0, 65534), comment='Number of times fan switched on')

r1,bai,Flame,,s,UCH,15=on;240=off,,Flame
MsgDef('bai', 'Flame', read=True, prio=1)
    FieldDef(0, '', EnumType(('on', 'off')), comment='Flame')

r,bai,FlameSensingASIC,,s,UIN,,,ioni/adc value from the flame control circuit
MsgDef('bai', 'FlameSensingASIC', read=True)
    FieldDef(0, '', IntType(0, 65534), comment='ioni/adc value from the flame control circuit')

r,bai,FloorHeatingContact,onoff,s,UCH,0=off;1=on,,Floor heating contact
MsgDef('bai', 'FloorHeatingContact', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Floor heating contact')

r,bai,FlowsetHcMax,temp,s,D2C,,°C,Setting the maximum flow setpoint in heating mode (with left-hand stop of the potentiometer)
MsgDef('bai', 'FlowsetHcMax', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Setting the maximum flow setpoint in heating mode (with left-hand stop of the potentiometer)')

w,bai,FlowsetHcMax,temp,m,D2C,,°C,Setting the maximum flow setpoint in heating mode (with left-hand stop of the potentiometer)
MsgDef('bai', 'FlowsetHcMax', write=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Setting the maximum flow setpoint in heating mode (with left-hand stop of the potentiometer)')

r,bai,FlowsetHwcMax,temp,s,D2C,,°C,storage charging temperature limit (target flow temperature in storage mode)
MsgDef('bai', 'FlowsetHwcMax', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='storage charging temperature limit (target flow temperature in storage mode)')

w,bai,FlowsetHwcMax,temp,m,D2C,,°C,storage charging temperature limit (target flow temperature in storage mode)
MsgDef('bai', 'FlowsetHwcMax', write=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='storage charging temperature limit (target flow temperature in storage mode)')

r1,bai,FlowTemp,temp,s,D2C,,°C,CH supply temperature sensor (VF2),sensor,s,UCH,0=ok;85=circuit;170=cutoff,,sensor status
MsgDef('bai', 'FlowTemp', read=True, prio=1)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='CH supply temperature sensor (VF2)')
    FieldDef(1, 'sensor', EnumType(('ok', 'circuit', 'cutoff')), comment='sensor status')
    VirtFieldDef('temp+sensor', IntType(-2047.9, 2047.9, divider=16))

r9,bai,FlowTempDesired,temp,s,D2C,,°C,Flow temperature target value or return target value when return regulation is set
MsgDef('bai', 'FlowTempDesired', read=True, prio=9)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Flow temperature target value or return target value when return regulation is set')

r,bai,FlowTempMax,temp,s,D2C,,°C,Maximum CH flow temperature
MsgDef('bai', 'FlowTempMax', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Maximum CH flow temperature')

r,bai,Fluegasvalve,onoff,s,UCH,0=off;1=on,,Feedback from the flue gas valve
MsgDef('bai', 'Fluegasvalve', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Feedback from the flue gas valve')

r,bai,FluegasvalveOpen,onoff,s,UCH,0=off;1=on,,Exhaust (flue) flap open
MsgDef('bai', 'FluegasvalveOpen', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Exhaust (flue) flap open')

r,bai,Gasvalve3UC,,s,UCH,15=on;240=off,,Gas valve switching signal (from the processor)
MsgDef('bai', 'Gasvalve3UC', read=True)
    FieldDef(0, '', EnumType(('on', 'off')), comment='Gas valve switching signal (from the processor)')

r,bai,GasvalveASICFeedback,,s,UCH,15=on;240=off,,Gas valve feedback (from ASIC)
MsgDef('bai', 'GasvalveASICFeedback', read=True)
    FieldDef(0, '', EnumType(('on', 'off')), comment='Gas valve feedback (from ASIC)')

r,bai,GasvalveUC,,s,UCH,15=on;240=off,,Activation signal of the gasvalve (activated via micrcontroller)
MsgDef('bai', 'GasvalveUC', read=True)
    FieldDef(0, '', EnumType(('on', 'off')), comment='Activation signal of the gasvalve (activated via micrcontroller)')

r,bai,GasvalveUCFeedback,,s,UCH,15=on;240=off,,Gas valve feedback (from micro controller)
MsgDef('bai', 'GasvalveUCFeedback', read=True)
    FieldDef(0, '', EnumType(('on', 'off')), comment='Gas valve feedback (from micro controller)')

r,bai,HcHours,hoursum2,s,UIN,,h,Hours of operation in heating mode
MsgDef('bai', 'HcHours', read=True)
    FieldDef(0, 'hoursum2', IntType(0, 65534), unit='h', comment='Hours of operation in heating mode')

r,bai,HcPumpMode,,s,UCH,0=post run;1=permanent;2=winter,,Pump mode for central heating
MsgDef('bai', 'HcPumpMode', read=True)
    FieldDef(0, '', EnumType(('post run', 'permanent', 'winter')), comment='Pump mode for central heating')

w,bai,HcPumpMode,,m,UCH,0=post run;1=permanent;2=winter,,Pump mode for central heating
MsgDef('bai', 'HcPumpMode', write=True)
    FieldDef(0, '', EnumType(('post run', 'permanent', 'winter')), comment='Pump mode for central heating')

r,bai,HcPumpStarts,cntstarts2,s,UIN,,,Pump times switched on
MsgDef('bai', 'HcPumpStarts', read=True)
    FieldDef(0, 'cntstarts2', IntType(0, 65534), comment='Pump times switched on')

r,bai,HcStarts,,s,UIN,-100,,Number of CH mode starts
MsgDef('bai', 'HcStarts', read=True)
    FieldDef(0, '', IntType(0, 6553400, divider=0.01), comment='Number of CH mode starts')

r,bai,HcUnderHundredStarts,,s,UCH,,,Heat switch cycles under hundred
MsgDef('bai', 'HcUnderHundredStarts', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Heat switch cycles under hundred')

r,bai,HeatingSwitch,onoff,s,UCH,0=off;1=on,,Central heating on/off switch
MsgDef('bai', 'HeatingSwitch', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Central heating on/off switch')

w,bai,HeatingSwitch,onoff,m,UCH,0=off;1=on,,Central heating on/off switch
MsgDef('bai', 'HeatingSwitch', write=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Central heating on/off switch')

r,bai,HoursTillService,hoursum2,s,UIN,,h,Hours left before service is needed
MsgDef('bai', 'HoursTillService', read=True)
    FieldDef(0, 'hoursum2', IntType(0, 65534), unit='h', comment='Hours left before service is needed')

w,bai,HoursTillService,hoursum2,m,UIN,,h,Hours left before service is needed
MsgDef('bai', 'HoursTillService', write=True)
    FieldDef(0, 'hoursum2', IntType(0, 65534), unit='h', comment='Hours left before service is needed')

r,bai,HwcDemand,yesno,s,UCH,0=no;1=yes,,Domestic hot water demand
MsgDef('bai', 'HwcDemand', read=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='Domestic hot water demand')

r,bai,HwcHours,hoursum2,s,UIN,,h,Hours of DHW operation
MsgDef('bai', 'HwcHours', read=True)
    FieldDef(0, 'hoursum2', IntType(0, 65534), unit='h', comment='Hours of DHW operation')

r,bai,HwcImpellorSwitch,yesno,s,UCH,0=no;1=yes,,DHW demand from impeller switch
MsgDef('bai', 'HwcImpellorSwitch', read=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='DHW demand from impeller switch')

r,bai,HwcPostrunTime,,s,UCH,-10,s,"Pump overrun time after charging a storage (charging through C1-C2, external/internal tank with tank sensor)"
MsgDef('bai', 'HwcPostrunTime', read=True)
    FieldDef(0, '', IntType(0, 2540, divider=0.1), unit='s', comment='Pump overrun time after charging a storage (charging through C1-C2, external/internal tank with tank sensor)')

w,bai,HwcPostrunTime,,m,UCH,-10,s,"Pump overrun time after charging a storage (charging through C1-C2, external/internal tank with tank sensor)"
MsgDef('bai', 'HwcPostrunTime', write=True)
    FieldDef(0, '', IntType(0, 2540, divider=0.1), unit='s', comment='Pump overrun time after charging a storage (charging through C1-C2, external/internal tank with tank sensor)')

r,bai,HwcStarts,,s,UIN,-100,,Number of DHW mode starts
MsgDef('bai', 'HwcStarts', read=True)
    FieldDef(0, '', IntType(0, 6553400, divider=0.01), comment='Number of DHW mode starts')

r,bai,HwcSwitch,onoff,s,UCH,0=off;1=on,,Domestic hot water switch
MsgDef('bai', 'HwcSwitch', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Domestic hot water switch')

w,bai,HwcSwitch,onoff,m,UCH,0=off;1=on,,Domestic hot water switch
MsgDef('bai', 'HwcSwitch', write=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Domestic hot water switch')

r,bai,HwcTemp,temp,s,D2C,,°C,Hot water flow temperature,sensor,s,UCH,0=ok;85=circuit;170=cutoff,,sensor status
MsgDef('bai', 'HwcTemp', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Hot water flow temperature')
    FieldDef(1, 'sensor', EnumType(('ok', 'circuit', 'cutoff')), comment='sensor status')
    VirtFieldDef('temp+sensor', IntType(-2047.9, 2047.9, divider=16))

r,bai,HwcTempDesired,temp,s,D2C,,°C,Hot water temperature target value
MsgDef('bai', 'HwcTempDesired', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Hot water temperature target value')

r,bai,HwcTempMax,temp,s,D2C,,°C,Max. Speichersollwert. Limits the maximum adjustment range of the potentiometer (right stop).
MsgDef('bai', 'HwcTempMax', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Max. Speichersollwert. Limits the maximum adjustment range of the potentiometer (right stop).')

w,bai,HwcTempMax,temp,m,D2C,,°C,Max. Speichersollwert. Limits the maximum adjustment range of the potentiometer (right stop).
MsgDef('bai', 'HwcTempMax', write=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Max. Speichersollwert. Limits the maximum adjustment range of the potentiometer (right stop).')

r,bai,HwcTypes,,s,UCH,,,DHW type of the appliance
MsgDef('bai', 'HwcTypes', read=True)
    FieldDef(0, '', IntType(0, 254), comment='DHW type of the appliance')

r,bai,HwcUnderHundredStarts,,s,UCH,,,DHW switch cycles under hundred
MsgDef('bai', 'HwcUnderHundredStarts', read=True)
    FieldDef(0, '', IntType(0, 254), comment='DHW switch cycles under hundred')

r,bai,HwcWaterflow,uin100,s,UIN,100,,domestic hot water flow sensor
MsgDef('bai', 'HwcWaterflow', read=True)
    FieldDef(0, 'uin100', IntType(0, 655.34, divider=100), comment='domestic hot water flow sensor')

r,bai,HwcWaterflowMax,uin100,s,UIN,100,,Maximalwert des Warmwassersensors
MsgDef('bai', 'HwcWaterflowMax', read=True)
    FieldDef(0, 'uin100', IntType(0, 655.34, divider=100), comment='Maximalwert des Warmwassersensors')

r,bai,Ignitor,,s,UCH,15=on;240=off,,Ignition status
MsgDef('bai', 'Ignitor', read=True)
    FieldDef(0, '', EnumType(('on', 'off')), comment='Ignition status')

r,bai,InitialisationEEPROM,yesno,s,UCH,0=no;1=yes,,EEPROM initialization (for production)
MsgDef('bai', 'InitialisationEEPROM', read=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='EEPROM initialization (for production)')

r,bai,IonisationVoltageLevel,,s,SIN,10,,Digital ionisation voltage (80 = no flame; 40 = good flame)
MsgDef('bai', 'IonisationVoltageLevel', read=True)
    FieldDef(0, '', IntType(-3276.7, 3276.7, divider=10), comment='Digital ionisation voltage (80 = no flame; 40 = good flame)')

r,bai,maintenancedata_HwcTempMax,temp,s,D2C,,°C,Maximum temperature measured at the tap water outlet sensor
MsgDef('bai', 'maintenancedata_HwcTempMax', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Maximum temperature measured at the tap water outlet sensor')

r,bai,maxIgnitiontime,,s,UCH,10,s,Maximum ignition time
MsgDef('bai', 'maxIgnitiontime', read=True)
    FieldDef(0, '', IntType(0, 25.4, divider=10), unit='s', comment='Maximum ignition time')

r,bai,minIgnitiontime,,s,UCH,10,s,Minimum ignition time
MsgDef('bai', 'minIgnitiontime', read=True)
    FieldDef(0, '', IntType(0, 25.4, divider=10), unit='s', comment='Minimum ignition time')

r1,bai,ModulationTempDesired,,s,SIN,10,%,Modulation set point
MsgDef('bai', 'ModulationTempDesired', read=True, prio=1)
    FieldDef(0, '', IntType(-3276.7, 3276.7, divider=10), unit='%', comment='Modulation set point')

r,bai,OptionalRelais,,s,UCH,1=circulationpump;2=extheatingpump;3=storagechargingpump;4=fluegasflapextractorhood;5=externalgasvalve;6=externalerrormessage;7=solarpump;8=remotecontrol,,Function of optional relay
MsgDef('bai', 'OptionalRelais', read=True)
    FieldDef(0, '', EnumType(('circulationpump', 'extheatingpump', 'storagechargingpump', 'fluegasflapextractorhood', 'externalgasvalve', 'externalerrormessage', 'solarpump', 'remotecontrol')), comment='Function of optional relay')

w,bai,OptionalRelais,,m,UCH,1=circulationpump;2=extheatingpump;3=storagechargingpump;4=fluegasflapextractorhood;5=externalgasvalve;6=externalerrormessage;7=solarpump;8=remotecontrol,,Function of optional relay
MsgDef('bai', 'OptionalRelais', write=True)
    FieldDef(0, '', EnumType(('circulationpump', 'extheatingpump', 'storagechargingpump', 'fluegasflapextractorhood', 'externalgasvalve', 'externalerrormessage', 'solarpump', 'remotecontrol')), comment='Function of optional relay')

r,bai,OutdoorstempSensor,temp,s,D2C,,°C,Outdoor temperature sensor (uncorrected value) value and status,sensor,s,UCH,0=ok;85=circuit;170=cutoff,,sensor status
MsgDef('bai', 'OutdoorstempSensor', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Outdoor temperature sensor (uncorrected value) value and status')
    FieldDef(1, 'sensor', EnumType(('ok', 'circuit', 'cutoff')), comment='sensor status')
    VirtFieldDef('temp+sensor', IntType(-2047.9, 2047.9, divider=16))

r,bai,OverflowCounter,yesno,s,UCH,0=no;1=yes,,Predictive Maintenance counter have got an overflow
MsgDef('bai', 'OverflowCounter', read=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='Predictive Maintenance counter have got an overflow')

r,bai,ParamToken,,s,UCH,,,Token for parameter managment
MsgDef('bai', 'ParamToken', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Token for parameter managment')

r,bai,PartloadHcKW,power,s,UCH,,kW,Heating part load
MsgDef('bai', 'PartloadHcKW', read=True)
    FieldDef(0, 'power', IntType(0, 254), unit='kW', comment='Heating part load')

w,bai,PartloadHcKW,power,m,UCH,,kW,Heating part load
MsgDef('bai', 'PartloadHcKW', write=True)
    FieldDef(0, 'power', IntType(0, 254), unit='kW', comment='Heating part load')

r,bai,PartloadHwcKW,power,s,UCH,,kW,storage part load (storage charging capacity limit)
MsgDef('bai', 'PartloadHwcKW', read=True)
    FieldDef(0, 'power', IntType(0, 254), unit='kW', comment='storage part load (storage charging capacity limit)')

w,bai,PartloadHwcKW,power,m,UCH,,kW,storage part load (storage charging capacity limit)
MsgDef('bai', 'PartloadHwcKW', write=True)
    FieldDef(0, 'power', IntType(0, 254), unit='kW', comment='storage part load (storage charging capacity limit)')

r,bai,PartnumberBox,,s,HEX:5,,,Part number of the eBox
MsgDef('bai', 'PartnumberBox', read=True)
    FieldDef(0, '', HexType(length=5), comment='Part number of the eBox')

r1,bai,PositionValveSet,,s,UCH,,,Position of diverter valve; 100 = DHW; 0 = heating; 40 = middle position
MsgDef('bai', 'PositionValveSet', read=True, prio=1)
    FieldDef(0, '', IntType(0, 254), comment='Position of diverter valve; 100 = DHW; 0 = heating; 40 = middle position')

r,bai,PowerValue,,s,HEX:6,,,Power value of the boiler (minimum and maximum)
MsgDef('bai', 'PowerValue', read=True)
    FieldDef(0, '', HexType(length=6), comment='Power value of the boiler (minimum and maximum)')

r,bai,PrAPSCounter,,s,UCH,,,Maintenance data
MsgDef('bai', 'PrAPSCounter', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Maintenance data')

r,bai,PrAPSSum,seconds2,s,UIN,,s,Maintenance data
MsgDef('bai', 'PrAPSSum', read=True)
    FieldDef(0, 'seconds2', IntType(0, 65534), unit='s', comment='Maintenance data')

r9,bai,PrEnergyCountHc1,,s,ULG,,,Maintenance data
MsgDef('bai', 'PrEnergyCountHc1', read=True, prio=9)
    FieldDef(0, '', IntType(0, 4294967294), comment='Maintenance data')

r,bai,PrEnergyCountHc2,,s,ULG,,,Wartungsdaten
MsgDef('bai', 'PrEnergyCountHc2', read=True)
    FieldDef(0, '', IntType(0, 4294967294), comment='Wartungsdaten')

r,bai,PrEnergyCountHc3,,s,ULG,,,Maintenance data
MsgDef('bai', 'PrEnergyCountHc3', read=True)
    FieldDef(0, '', IntType(0, 4294967294), comment='Maintenance data')

r9,bai,PrEnergyCountHwc1,,s,ULG,,,Maintenance data
MsgDef('bai', 'PrEnergyCountHwc1', read=True, prio=9)
    FieldDef(0, '', IntType(0, 4294967294), comment='Maintenance data')

r,bai,PrEnergyCountHwc2,,s,ULG,,,Maintenance data
MsgDef('bai', 'PrEnergyCountHwc2', read=True)
    FieldDef(0, '', IntType(0, 4294967294), comment='Maintenance data')

r,bai,PrEnergyCountHwc3,,s,ULG,,,Maintenance data
MsgDef('bai', 'PrEnergyCountHwc3', read=True)
    FieldDef(0, '', IntType(0, 4294967294), comment='Maintenance data')

r9,bai,PrEnergySumHc1,,s,ULG,,,Maintenance data
MsgDef('bai', 'PrEnergySumHc1', read=True, prio=9)
    FieldDef(0, '', IntType(0, 4294967294), comment='Maintenance data')

r,bai,PrEnergySumHc2,,s,ULG,,,Maintenance data
MsgDef('bai', 'PrEnergySumHc2', read=True)
    FieldDef(0, '', IntType(0, 4294967294), comment='Maintenance data')

r,bai,PrEnergySumHc3,,s,ULG,,,Maintenance data
MsgDef('bai', 'PrEnergySumHc3', read=True)
    FieldDef(0, '', IntType(0, 4294967294), comment='Maintenance data')

r9,bai,PrEnergySumHwc1,,s,ULG,,,Maintenance data
MsgDef('bai', 'PrEnergySumHwc1', read=True, prio=9)
    FieldDef(0, '', IntType(0, 4294967294), comment='Maintenance data')

r,bai,PrEnergySumHwc2,,s,ULG,,,Maintenance data
MsgDef('bai', 'PrEnergySumHwc2', read=True)
    FieldDef(0, '', IntType(0, 4294967294), comment='Maintenance data')

r,bai,PrEnergySumHwc3,,s,ULG,,,Maintenance data
MsgDef('bai', 'PrEnergySumHwc3', read=True)
    FieldDef(0, '', IntType(0, 4294967294), comment='Maintenance data')

r,bai,ProductionByte,,s,UCH,,,
MsgDef('bai', 'ProductionByte', read=True)
    FieldDef(0, '', IntType(0, 254))

r,bai,PrVortexFlowSensorValue,,s,SIN,,ADC,Maintenance data
MsgDef('bai', 'PrVortexFlowSensorValue', read=True)
    FieldDef(0, '', IntType(-32767, 32767), unit='ADC', comment='Maintenance data')

r,bai,PumpHours,hoursum2,s,UIN,,h,Pump operating hours
MsgDef('bai', 'PumpHours', read=True)
    FieldDef(0, 'hoursum2', IntType(0, 65534), unit='h', comment='Pump operating hours')

r,bai,PumpHwcFlowNumber,,s,UCH,,,Number of times DHW flow rate was detected
MsgDef('bai', 'PumpHwcFlowNumber', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Number of times DHW flow rate was detected')

r,bai,PumpHwcFlowSum,,s,UIN,,,Summed up DHW flow rate
MsgDef('bai', 'PumpHwcFlowSum', read=True)
    FieldDef(0, '', IntType(0, 65534), comment='Summed up DHW flow rate')

r1,bai,PumpPower,,s,UCH,,,Current central heating pump power
MsgDef('bai', 'PumpPower', read=True, prio=1)
    FieldDef(0, '', IntType(0, 254), comment='Current central heating pump power')

r,bai,PumpPowerDesired,,s,UCH,0=auto;1=53;2=60;3=70;4=85;5=100,%,PWM-Desired central heating pump power
MsgDef('bai', 'PumpPowerDesired', read=True)
    FieldDef(0, '', EnumType(('auto', '53', '60', '70', '85', '100')), unit='%', comment='PWM-Desired central heating pump power')

w,bai,PumpPowerDesired,,m,UCH,0=auto;1=53;2=60;3=70;4=85;5=100,%,PWM-Desired central heating pump power
MsgDef('bai', 'PumpPowerDesired', write=True)
    FieldDef(0, '', EnumType(('auto', '53', '60', '70', '85', '100')), unit='%', comment='PWM-Desired central heating pump power')

r,bai,RemainingBoilerblocktime,minutes0,s,UCH,,min,Remaining burner anti-cycling time
MsgDef('bai', 'RemainingBoilerblocktime', read=True)
    FieldDef(0, 'minutes0', IntType(0, 254), unit='min', comment='Remaining burner anti-cycling time')

r,bai,ReturnRegulation,onoff,s,UCH,0=off;1=on,,Activation of the return control
MsgDef('bai', 'ReturnRegulation', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Activation of the return control')

w,bai,ReturnRegulation,onoff,m,UCH,0=off;1=on,,Activation of the return control
MsgDef('bai', 'ReturnRegulation', write=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Activation of the return control')

r1,bai,ReturnTemp,temp,s,D2C,,°C,CH return temperature sensor,tempmirror,s,UIN,,,,sensor,s,UCH,0=ok;85=circuit;170=cutoff,,sensor status
MsgDef('bai', 'ReturnTemp', read=True, prio=1)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='CH return temperature sensor')
    FieldDef(1, 'tempmirror', IntType(0, 65534))
    FieldDef(2, 'sensor', EnumType(('ok', 'circuit', 'cutoff')), comment='sensor status')
    VirtFieldDef('temp+sensor', IntType(-2047.9, 2047.9, divider=16))

r,bai,ReturnTempExternal,temp,s,D2C,,°C,External return temperature sensor,sensor,s,UCH,0=ok;85=circuit;170=cutoff,,sensor status
MsgDef('bai', 'ReturnTempExternal', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='External return temperature sensor')
    FieldDef(1, 'sensor', EnumType(('ok', 'circuit', 'cutoff')), comment='sensor status')
    VirtFieldDef('temp+sensor', IntType(-2047.9, 2047.9, divider=16))

r,bai,ReturnTempMax,temp,s,D2C,,°C,Max flow return temperature
MsgDef('bai', 'ReturnTempMax', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Max flow return temperature')

r,bai,SerialNumber,,s,HEX:8,,,Serial number AI
MsgDef('bai', 'SerialNumber', read=True)
    FieldDef(0, '', HexType(length=8), comment='Serial number AI')

r,bai,SetFactoryValues,yesno,s,UCH,0=no;1=yes,,Reset to factory defaults
MsgDef('bai', 'SetFactoryValues', read=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='Reset to factory defaults')

w,bai,SetFactoryValues,yesno,m,UCH,0=no;1=yes,,Reset to factory defaults
MsgDef('bai', 'SetFactoryValues', write=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='Reset to factory defaults')

uw,bai,SetMode,hcmode,m,UCH,0=auto;1=off;2=water,,boiler mode,flowtempdesired,m,D1C,,°C,temperature,hwctempdesired,m,D1C,,°C,temperature,hwcflowtempdesired,m,UCH,,°C,temperature,,m,IGN:1,,,,disablehc,m,BI0:1,,,,disablehwctapping,m,BI1:1,,,,disablehwcload,m,BI2:1,,,,,m,IGN:1,,,,remoteControlHcPump,m,BI0:1,,,,releaseBackup,m,BI1:1,,,,releaseCooling,m,BI2:1,,,
MsgDef('bai', 'SetMode', write=True, update=True)
    FieldDef(0, 'hcmode', EnumType(('auto', 'off', 'water')), comment='boiler mode')
    FieldDef(1, 'flowtempdesired', IntType(0, 100, divider=2), unit='°C', comment='temperature')
    FieldDef(2, 'hwctempdesired', IntType(0, 100, divider=2), unit='°C', comment='temperature')
    FieldDef(3, 'hwcflowtempdesired', IntType(0, 254), unit='°C', comment='temperature')
    FieldDef(4, 'disablehc', BoolType())
    FieldDef(5, 'disablehwctapping', BoolType())
    FieldDef(6, 'disablehwcload', BoolType())
    FieldDef(7, 'remoteControlHcPump', BoolType())
    FieldDef(8, 'releaseBackup', BoolType())
    FieldDef(9, 'releaseCooling', BoolType())

r,bai,SHEMaxDeltaHwcFlow,temp,s,D2C,,°C,maximum difference between flow and DHW outlet temperature
MsgDef('bai', 'SHEMaxDeltaHwcFlow', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='maximum difference between flow and DHW outlet temperature')

r,bai,SHEMaxFlowTemp,temp,s,D2C,,°C,Maximum flow temperature for WW
MsgDef('bai', 'SHEMaxFlowTemp', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Maximum flow temperature for WW')

r,bai,SolPostHeat,,s,UCH,,,special DHW functions0: solar function deactivated (default)1: solar function activated and DHW setpoint minimum 60°C2: solar function activated and DHW setpoint like combi standard (min 35°)3: DHW setpoint minimum 60°C (poti)
MsgDef('bai', 'SolPostHeat', read=True)
    FieldDef(0, '', IntType(0, 254), comment='special DHW functions0: solar function deactivated (default)1: solar function activated and DHW setpoint minimum 60°C2: solar function activated and DHW setpoint like combi standard (min 35°)3: DHW setpoint minimum 60°C (poti)')

w,bai,SolPostHeat,,m,UCH,,,special DHW functions0: solar function deactivated (default)1: solar function activated and DHW setpoint minimum 60°C2: solar function activated and DHW setpoint like combi standard (min 35°)3: DHW setpoint minimum 60°C (poti)
MsgDef('bai', 'SolPostHeat', write=True)
    FieldDef(0, '', IntType(0, 254), comment='special DHW functions0: solar function deactivated (default)1: solar function activated and DHW setpoint minimum 60°C2: solar function activated and DHW setpoint like combi standard (min 35°)3: DHW setpoint minimum 60°C (poti)')

r,bai,SpecialAdj,,s,UCH,,,"switching on threshold for recognition of water tapping0 = 1,5 l/min and no delay, 1 = 3,7 l/min and 2s delay"
MsgDef('bai', 'SpecialAdj', read=True)
    FieldDef(0, '', IntType(0, 254), comment='switching on threshold for recognition of water tapping0 = 1,5 l/min and no delay, 1 = 3,7 l/min and 2s delay')

w,bai,SpecialAdj,,m,UCH,,,"switching on threshold for recognition of water tapping0 = 1,5 l/min and no delay, 1 = 3,7 l/min and 2s delay"
MsgDef('bai', 'SpecialAdj', write=True)
    FieldDef(0, '', IntType(0, 254), comment='switching on threshold for recognition of water tapping0 = 1,5 l/min and no delay, 1 = 3,7 l/min and 2s delay')

r,bai,Statenumber,,s,UCH,,,Status number
MsgDef('bai', 'Statenumber', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Status number')

r,bai,Status01,temp1,s,D1C,,°C,temperature,temp1,s,D1C,,°C,temperature,temp2,s,D2B,,°C,temperature,temp1,s,D1C,,°C,temperature,temp1,s,D1C,,°C,temperature,pumpstate,s,UCH,0=off;1=on;2=overrun,,pump state
MsgDef('bai', 'Status01', read=True)
    FieldDef(0, 'temp1.0', IntType(0, 100, divider=2), unit='°C', comment='temperature')
    FieldDef(1, 'temp1.1', IntType(0, 100, divider=2), unit='°C', comment='temperature')
    FieldDef(2, 'temp2', IntType(-127.99, 127.99, divider=256), unit='°C', comment='temperature')
    FieldDef(3, 'temp1.2', IntType(0, 100, divider=2), unit='°C', comment='temperature')
    FieldDef(4, 'temp1.3', IntType(0, 100, divider=2), unit='°C', comment='temperature')
    FieldDef(5, 'pumpstate', EnumType(('off', 'on', 'overrun')), comment='pump state')

r,bai,Status02,hwcmode,s,UCH,0=disabled;1=on;2=off;3=auto,,hot water mode,temp0,s,UCH,,°C,temperature,temp1,s,D1C,,°C,temperature,temp0,s,UCH,,°C,temperature,temp1,s,D1C,,°C,temperature
MsgDef('bai', 'Status02', read=True)
    FieldDef(0, 'hwcmode', EnumType(('disabled', 'on', 'off', 'auto')), comment='hot water mode')
    FieldDef(1, 'temp0.0', IntType(0, 254), unit='°C', comment='temperature')
    FieldDef(2, 'temp1.0', IntType(0, 100, divider=2), unit='°C', comment='temperature')
    FieldDef(3, 'temp0.1', IntType(0, 254), unit='°C', comment='temperature')
    FieldDef(4, 'temp1.1', IntType(0, 100, divider=2), unit='°C', comment='temperature')

r,bai,Status16,temp,s,D2C,,°C,temperature
MsgDef('bai', 'Status16', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='temperature')

r,bai,Status,temp,s,D2C,,°C,temperature,press,s,FLT,,bar,pressure,press,s,FLT,,bar,pressure,hcmode2,s,UCH,0=off;3=heat;4=water,,boiler mode,,s,HEX:1,,,
MsgDef('bai', 'Status', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='temperature')
    FieldDef(1, 'press.0', IntType(-32.767, 32.767, divider=1000), unit='bar', comment='pressure')
    FieldDef(2, 'press.1', IntType(-32.767, 32.767, divider=1000), unit='bar', comment='pressure')
    FieldDef(3, 'hcmode2', EnumType(('off', 'heat', 'water')), comment='boiler mode')
    FieldDef(4, '', HexType(length=1))

uw,bai,StatusCirPump,,m,UCH,0=off;100=on,,
MsgDef('bai', 'StatusCirPump', write=True, update=True)
    FieldDef(0, '', EnumType(('off', 'on')))

r,bai,Storageloadpump,percent0,s,UCH,,%,Tank load pump demand
MsgDef('bai', 'Storageloadpump', read=True)
    FieldDef(0, 'percent0', IntType(0, 254), unit='%', comment='Tank load pump demand')

r,bai,StorageLoadPumpHours,hoursum2,s,UIN,,h,Preditive maintenance data
MsgDef('bai', 'StorageLoadPumpHours', read=True)
    FieldDef(0, 'hoursum2', IntType(0, 65534), unit='h', comment='Preditive maintenance data')

r,bai,StorageloadPumpStarts,cntstarts2,s,UIN,,,Preditive maintenance data
MsgDef('bai', 'StorageloadPumpStarts', read=True)
    FieldDef(0, 'cntstarts2', IntType(0, 65534), comment='Preditive maintenance data')

r,bai,StorageLoadTimeMax,minutes0,s,UCH,,min,Maximum water storing time for storage without own controls
MsgDef('bai', 'StorageLoadTimeMax', read=True)
    FieldDef(0, 'minutes0', IntType(0, 254), unit='min', comment='Maximum water storing time for storage without own controls')

w,bai,StorageLoadTimeMax,minutes0,m,UCH,,min,Maximum water storing time for storage without own controls
MsgDef('bai', 'StorageLoadTimeMax', write=True)
    FieldDef(0, 'minutes0', IntType(0, 254), unit='min', comment='Maximum water storing time for storage without own controls')

r,bai,StoragereleaseClock,yesno,s,UCH,0=no;1=yes,,hot water release (tank storage) via eBus Control
MsgDef('bai', 'StoragereleaseClock', read=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='hot water release (tank storage) via eBus Control')

r,bai,StorageTemp,temp,s,D2C,,°C,Current temperature for warm start sensor (combi boiler) / Current storage tank sensor (system boiler only),sensor,s,UCH,0=ok;85=circuit;170=cutoff,,sensor status
MsgDef('bai', 'StorageTemp', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Current temperature for warm start sensor (combi boiler) / Current storage tank sensor (system boiler only)')
    FieldDef(1, 'sensor', EnumType(('ok', 'circuit', 'cutoff')), comment='sensor status')
    VirtFieldDef('temp+sensor', IntType(-2047.9, 2047.9, divider=16))

r,bai,StorageTempDesired,temp,s,D2C,,°C,Warm start temperature value (combi boiler only); Storage temperature target value (system boiler only)
MsgDef('bai', 'StorageTempDesired', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Warm start temperature value (combi boiler only); Storage temperature target value (system boiler only)')

r,bai,StorageTempMax,temp,s,D2C,,°C,Maximum storage tank temperature
MsgDef('bai', 'StorageTempMax', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Maximum storage tank temperature')

r,bai,TargetFanSpeed,,s,UIN,,1/min,Fan speed setpoint
MsgDef('bai', 'TargetFanSpeed', read=True)
    FieldDef(0, '', IntType(0, 65534), unit='1/min', comment='Fan speed setpoint')

r,bai,TargetFanSpeedOutput,,s,UIN,,1/min,Target fan speed
MsgDef('bai', 'TargetFanSpeedOutput', read=True)
    FieldDef(0, '', IntType(0, 65534), unit='1/min', comment='Target fan speed')

r,bai,TempDiffBlock,temp0,s,UCH,,°C,Number of modulationblocking of the boilers cause of to high/incorrect difference of flow/return temperatures
MsgDef('bai', 'TempDiffBlock', read=True)
    FieldDef(0, 'temp0', IntType(0, 254), unit='°C', comment='Number of modulationblocking of the boilers cause of to high/incorrect difference of flow/return temperatures')

r,bai,TempDiffFailure,temp0,s,UCH,,°C,Number of shutdowns due to incorrect difference between supply and return temperatures
MsgDef('bai', 'TempDiffFailure', read=True)
    FieldDef(0, 'temp0', IntType(0, 254), unit='°C', comment='Number of shutdowns due to incorrect difference between supply and return temperatures')

r,bai,TempGradientFailure,temp0,s,UCH,,°C,Number of boiler shutdown due to high gradient (S.54)
MsgDef('bai', 'TempGradientFailure', read=True)
    FieldDef(0, 'temp0', IntType(0, 254), unit='°C', comment='Number of boiler shutdown due to high gradient (S.54)')

r,bai,Templimiter,,s,UCH,15=on;240=off,,Feedback of the temperature limiter sensor
MsgDef('bai', 'Templimiter', read=True)
    FieldDef(0, '', EnumType(('on', 'off')), comment='Feedback of the temperature limiter sensor')

r,bai,TemplimiterWithNTC,,s,UCH,15=yes;240=no,,Temperature limiter (1 = NTC; 0 = switching contact)
MsgDef('bai', 'TemplimiterWithNTC', read=True)
    FieldDef(0, '', EnumType(('yes', 'no')), comment='Temperature limiter (1 = NTC; 0 = switching contact)')

r,bai,TempMaxDiffExtTFT,temp,s,D2C,,°C,Predictive maintenance data
MsgDef('bai', 'TempMaxDiffExtTFT', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Predictive maintenance data')

r,bai,Testbyte,,s,UCH,,,Testbyte (relevant for testers)
MsgDef('bai', 'Testbyte', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Testbyte (relevant for testers)')

r,bai,TimerInputHc,onoff,s,UCH,0=off;1=on,,Timer input (block heatdemand)
MsgDef('bai', 'TimerInputHc', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Timer input (block heatdemand)')

r,bai,ValveMode,,s,UCH,,,"Set diverter valve position 0=normal mode, 1=middle position (GB), 2=permanent CH position"
MsgDef('bai', 'ValveMode', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Set diverter valve position 0=normal mode, 1=middle position (GB), 2=permanent CH position')

w,bai,ValveMode,,m,UCH,,,"Set diverter valve position 0=normal mode, 1=middle position (GB), 2=permanent CH position"
MsgDef('bai', 'ValveMode', write=True)
    FieldDef(0, '', IntType(0, 254), comment='Set diverter valve position 0=normal mode, 1=middle position (GB), 2=permanent CH position')

r,bai,ValveStarts,cntstarts2,s,UIN,,,Number of times 3WV value operated
MsgDef('bai', 'ValveStarts', read=True)
    FieldDef(0, 'cntstarts2', IntType(0, 65534), comment='Number of times 3WV value operated')

r,bai,VolatileLockout,,s,UCH,15=yes;240=no,,TRUE: STB errors are locking
MsgDef('bai', 'VolatileLockout', read=True)
    FieldDef(0, '', EnumType(('yes', 'no')), comment='TRUE: STB errors are locking')

r,bai,VolatileLockoutIFCGV,,s,UCH,15=yes;240=no,,All IFC errors are non-volatile
MsgDef('bai', 'VolatileLockoutIFCGV', read=True)
    FieldDef(0, '', EnumType(('yes', 'no')), comment='All IFC errors are non-volatile')

r,bai,WarmstartDemand,yesno,s,UCH,0=no;1=yes,,Status of warmstarr mode
MsgDef('bai', 'WarmstartDemand', read=True)
    FieldDef(0, 'yesno', EnumType(('no', 'yes')), comment='Status of warmstarr mode')

r,bai,WarmstartOffset,temp,s,D2C,,°C,Offset for warm start target value (combination boilers only)
MsgDef('bai', 'WarmstartOffset', read=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Offset for warm start target value (combination boilers only)')

w,bai,WarmstartOffset,temp,m,D2C,,°C,Offset for warm start target value (combination boilers only)
MsgDef('bai', 'WarmstartOffset', write=True)
    FieldDef(0, 'temp', IntType(-2047.9, 2047.9, divider=16), unit='°C', comment='Offset for warm start target value (combination boilers only)')

r,bai,WaterHcFlowMax,,s,UIN,,,v
MsgDef('bai', 'WaterHcFlowMax', read=True)
    FieldDef(0, '', IntType(0, 65534), comment='v')

r1,bai,WaterPressure,press,s,FLT,,bar,CH water pressure,sensor,s,UCH,0=ok;85=circuit;170=cutoff,,sensor status
MsgDef('bai', 'WaterPressure', read=True, prio=1)
    FieldDef(0, 'press', IntType(-32.767, 32.767, divider=1000), unit='bar', comment='CH water pressure')
    FieldDef(1, 'sensor', EnumType(('ok', 'circuit', 'cutoff')), comment='sensor status')
    VirtFieldDef('press+sensor', IntType(-32.767, 32.767, divider=1000))

r,bai,WaterpressureBranchControlOff,onoff,s,UCH,0=off;1=on,,Water pressure branch control switch
MsgDef('bai', 'WaterpressureBranchControlOff', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Water pressure branch control switch')

r,bai,WaterpressureMeasureCounter,,s,UCH,,,Maintenance data
MsgDef('bai', 'WaterpressureMeasureCounter', read=True)
    FieldDef(0, '', IntType(0, 254), comment='Maintenance data')

r,bai,WaterpressureVariantSum,pressm2,s,UIN,,mbar,Maintenance data
MsgDef('bai', 'WaterpressureVariantSum', read=True)
    FieldDef(0, 'pressm2', IntType(0, 65534), unit='mbar', comment='Maintenance data')

r1,bai,WP,onoff,s,UCH,0=off;1=on,,Internal central heating pump
MsgDef('bai', 'WP', read=True, prio=1)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Internal central heating pump')

r,bai,WPPostrunTime,minutes0,s,UCH,,min,water pump overrun time for heating mode
MsgDef('bai', 'WPPostrunTime', read=True)
    FieldDef(0, 'minutes0', IntType(0, 254), unit='min', comment='water pump overrun time for heating mode')

w,bai,WPPostrunTime,minutes0,m,UCH,,min,water pump overrun time for heating mode
MsgDef('bai', 'WPPostrunTime', write=True)
    FieldDef(0, 'minutes0', IntType(0, 254), unit='min', comment='water pump overrun time for heating mode')

r,bai,WPSecondStage,onoff,s,UCH,0=off;1=on,,Second stage of the pump activated
MsgDef('bai', 'WPSecondStage', read=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')), comment='Second stage of the pump activated')

u,broadcast,datetime,outsidetemp,m,D2B,,°C,temperature,time,m,BTI,,,time,date,m,BDA,,,date
MsgDef('broadcast', 'datetime', update=True)
    FieldDef(0, 'outsidetemp', IntType(-127.99, 127.99, divider=256), unit='°C', comment='temperature')
    FieldDef(1, 'time', TimeType(), comment='time')
    FieldDef(2, 'date', DateType(), comment='date')
    VirtFieldDef('date+time', DateTimeType())

u,broadcast,error,error,m,STR:10,,,
MsgDef('broadcast', 'error', update=True)
    FieldDef(0, 'error', StrType(length=10))

u,broadcast,hwcStatus,onoff,m,UCH,0=off;1=on,,,VF1,m,UCH,,°C,temperature,onoff,m,UCH,0=off;1=on,,
MsgDef('broadcast', 'hwcStatus', update=True)
    FieldDef(0, 'onoff.0', EnumType(('off', 'on')))
    FieldDef(1, 'VF1', IntType(0, 254), unit='°C', comment='temperature')
    FieldDef(2, 'onoff.1', EnumType(('off', 'on')))

u,broadcast,id,manufacturer,m,UCH,6=Dungs;15=FH Ostfalia;16=TEM;17=Lamberti;20=CEB;21=Landis-Staefa;22=FERRO;23=MONDIAL;24=Wikon;25=Wolf;32=RAWE;48=Satronic;64=ENCON;80=Kromschröder;96=Eberle;101=EBV;117=Grässlin;133=ebm-papst;149=SIG;165=Theben;167=Thermowatt;181=Vaillant;192=Toby;197=Weishaupt;253=ebusd.eu,,device manufacturer,id,m,STR:5,,,device id,software,m,PIN,,,software version,hardware,m,PIN,,,hardware version
MsgDef('broadcast', 'id', update=True)
    FieldDef(0, 'manufacturer', EnumType(('Dungs', 'FH Ostfalia', 'TEM', 'Lamberti', 'CEB', 'Landis-Staefa', 'FERRO', 'MONDIAL', 'Wikon', 'Wolf', 'RAWE', 'Satronic', 'ENCON', 'Kromschröder', 'Eberle', 'EBV', 'Grässlin', 'ebm-papst', 'SIG', 'Theben', 'Thermowatt', 'Vaillant', 'Toby', 'Weishaupt', 'ebusd.eu')), comment='device manufacturer')
    FieldDef(1, 'id', StrType(length=5), comment='device id')
    FieldDef(2, 'software', PinType(), comment='software version')
    FieldDef(3, 'hardware', PinType(), comment='hardware version')

r,broadcast,id,manufacturer,s,UCH,6=Dungs;15=FH Ostfalia;16=TEM;17=Lamberti;20=CEB;21=Landis-Staefa;22=FERRO;23=MONDIAL;24=Wikon;25=Wolf;32=RAWE;48=Satronic;64=ENCON;80=Kromschröder;96=Eberle;101=EBV;117=Grässlin;133=ebm-papst;149=SIG;165=Theben;167=Thermowatt;181=Vaillant;192=Toby;197=Weishaupt;253=ebusd.eu,,device manufacturer,id,s,STR:5,,,device id,software,s,PIN,,,software version,hardware,s,PIN,,,hardware version
MsgDef('broadcast', 'id', read=True)
    FieldDef(0, 'manufacturer', EnumType(('Dungs', 'FH Ostfalia', 'TEM', 'Lamberti', 'CEB', 'Landis-Staefa', 'FERRO', 'MONDIAL', 'Wikon', 'Wolf', 'RAWE', 'Satronic', 'ENCON', 'Kromschröder', 'Eberle', 'EBV', 'Grässlin', 'ebm-papst', 'SIG', 'Theben', 'Thermowatt', 'Vaillant', 'Toby', 'Weishaupt', 'ebusd.eu')), comment='device manufacturer')
    FieldDef(1, 'id', StrType(length=5), comment='device id')
    FieldDef(2, 'software', PinType(), comment='software version')
    FieldDef(3, 'hardware', PinType(), comment='hardware version')

w,broadcast,id,
MsgDef('broadcast', 'id', write=True)

u,broadcast,load,onoff,m,UCH,0=off;1=on,,
MsgDef('broadcast', 'load', update=True)
    FieldDef(0, 'onoff', EnumType(('off', 'on')))

u,broadcast,outsidetemp,temp2,m,D2B,,°C,temperature
MsgDef('broadcast', 'outsidetemp', update=True)
    FieldDef(0, 'temp2', IntType(-127.99, 127.99, divider=256), unit='°C', comment='temperature')

w,broadcast,queryexistence,
MsgDef('broadcast', 'queryexistence', write=True)

u,broadcast,signoflife,
MsgDef('broadcast', 'signoflife', update=True)

u,broadcast,vdatetime,time,m,BTI,,,,date,m,BDA,,,
MsgDef('broadcast', 'vdatetime', update=True)
    FieldDef(0, 'time', TimeType())
    FieldDef(1, 'date', DateType())
    VirtFieldDef('date+time', DateTimeType())

r,general,valuerange,id,m,UIN,,,register number,,s,IGN:2,,,,cur,s,UIN,,,current value,min,s,UIN,,,minimum value,max,s,UIN,,,maximum value,def,s,UIN,,,default value
MsgDef('general', 'valuerange', read=True)
    FieldDef(0, 'id', IntType(0, 65534), comment='register number')
    FieldDef(1, 'cur', IntType(0, 65534), comment='current value')
    FieldDef(2, 'min', IntType(0, 65534), comment='minimum value')
    FieldDef(3, 'max', IntType(0, 65534), comment='maximum value')
    FieldDef(4, 'def', IntType(0, 65534), comment='default value')

r,memory,eeprom,address,m,UIN,,,start address,count,m,UCH,,,number of bytes,data,s,HEX:*,,,data bytes
MsgDef('memory', 'eeprom', read=True)
    FieldDef(0, 'address', IntType(0, 65534), comment='start address')
    FieldDef(1, 'count', IntType(0, 254), comment='number of bytes')
    FieldDef(2, 'data', HexType(), comment='data bytes')

w,memory,eeprom,address,m,UIN,,,start address,data,m,HEX:*,,,data bytes
MsgDef('memory', 'eeprom', write=True)
    FieldDef(0, 'address', IntType(0, 65534), comment='start address')
    FieldDef(1, 'data', HexType(), comment='data bytes')

r,memory,ram,address,m,UIN,,,start address,count,m,UCH,,,number of bytes,data,s,HEX:*,,,data bytes
MsgDef('memory', 'ram', read=True)
    FieldDef(0, 'address', IntType(0, 65534), comment='start address')
    FieldDef(1, 'count', IntType(0, 254), comment='number of bytes')
    FieldDef(2, 'data', HexType(), comment='data bytes')

w,memory,ram,address,m,UIN,,,start address,data,m,HEX:*,,,data bytes
MsgDef('memory', 'ram', write=True)
    FieldDef(0, 'address', IntType(0, 65534), comment='start address')
    FieldDef(1, 'data', HexType(), comment='data bytes')

r,scan,id,,s,IGN:1,,,,prefix,s,STR:2,,,,year,s,STR:2,,,,week,s,STR:2,,,,product,s,STR:10,,,,supplier,s,STR:4,,,,counter,s,STR:6,,,,suffix,s,STR:2,,,
MsgDef('scan', 'id', read=True)
    FieldDef(0, 'prefix', StrType(length=2))
    FieldDef(1, 'year', StrType(length=2))
    FieldDef(2, 'week', StrType(length=2))
    FieldDef(3, 'product', StrType(length=10))
    FieldDef(4, 'supplier', StrType(length=4))
    FieldDef(5, 'counter', StrType(length=6))
    FieldDef(6, 'suffix', StrType(length=2))

r,scan.08,,MF,s,UCH,6=Dungs;15=FH Ostfalia;16=TEM;17=Lamberti;20=CEB;21=Landis-Staefa;22=FERRO;23=MONDIAL;24=Wikon;25=Wolf;32=RAWE;48=Satronic;64=ENCON;80=Kromschroeder;96=Eberle;101=EBV;117=Graesslin;133=ebm-papst;149=SIG;165=Theben;167=Thermowatt;181=Vaillant;192=Toby;197=Weishaupt;253=ebusd.eu,,,ID,s,STR:5,,,,SW,s,PIN,,,,HW,s,PIN,,,
MsgDef('scan.08', '', read=True)
    FieldDef(0, 'MF', EnumType(('Dungs', 'FH Ostfalia', 'TEM', 'Lamberti', 'CEB', 'Landis-Staefa', 'FERRO', 'MONDIAL', 'Wikon', 'Wolf', 'RAWE', 'Satronic', 'ENCON', 'Kromschroeder', 'Eberle', 'EBV', 'Graesslin', 'ebm-papst', 'SIG', 'Theben', 'Thermowatt', 'Vaillant', 'Toby', 'Weishaupt', 'ebusd.eu')))
    FieldDef(1, 'ID', StrType(length=5))
    FieldDef(2, 'SW', PinType())
    FieldDef(3, 'HW', PinType())

r,scan.08,id,,s,IGN:1,,,,prefix,s,STR:2,,,,year,s,STR:2,,,,week,s,STR:2,,,,product,s,STR:10,,,,supplier,s,STR:4,,,,counter,s,STR:6,,,,suffix,s,STR:2,,,
MsgDef('scan.08', 'id', read=True)
    FieldDef(0, 'prefix', StrType(length=2))
    FieldDef(1, 'year', StrType(length=2))
    FieldDef(2, 'week', StrType(length=2))
    FieldDef(3, 'product', StrType(length=10))
    FieldDef(4, 'supplier', StrType(length=4))
    FieldDef(5, 'counter', StrType(length=6))
    FieldDef(6, 'suffix', StrType(length=2))

r,scan.15,,MF,s,UCH,6=Dungs;15=FH Ostfalia;16=TEM;17=Lamberti;20=CEB;21=Landis-Staefa;22=FERRO;23=MONDIAL;24=Wikon;25=Wolf;32=RAWE;48=Satronic;64=ENCON;80=Kromschroeder;96=Eberle;101=EBV;117=Graesslin;133=ebm-papst;149=SIG;165=Theben;167=Thermowatt;181=Vaillant;192=Toby;197=Weishaupt;253=ebusd.eu,,,ID,s,STR:5,,,,SW,s,PIN,,,,HW,s,PIN,,,
MsgDef('scan.15', '', read=True)
    FieldDef(0, 'MF', EnumType(('Dungs', 'FH Ostfalia', 'TEM', 'Lamberti', 'CEB', 'Landis-Staefa', 'FERRO', 'MONDIAL', 'Wikon', 'Wolf', 'RAWE', 'Satronic', 'ENCON', 'Kromschroeder', 'Eberle', 'EBV', 'Graesslin', 'ebm-papst', 'SIG', 'Theben', 'Thermowatt', 'Vaillant', 'Toby', 'Weishaupt', 'ebusd.eu')))
    FieldDef(1, 'ID', StrType(length=5))
    FieldDef(2, 'SW', PinType())
    FieldDef(3, 'HW', PinType())

r,scan.15,id,,s,IGN:1,,,,prefix,s,STR:2,,,,year,s,STR:2,,,,week,s,STR:2,,,,product,s,STR:10,,,,supplier,s,STR:4,,,,counter,s,STR:6,,,,suffix,s,STR:2,,,
MsgDef('scan.15', 'id', read=True)
    FieldDef(0, 'prefix', StrType(length=2))
    FieldDef(1, 'year', StrType(length=2))
    FieldDef(2, 'week', StrType(length=2))
    FieldDef(3, 'product', StrType(length=10))
    FieldDef(4, 'supplier', StrType(length=4))
    FieldDef(5, 'counter', StrType(length=6))
    FieldDef(6, 'suffix', StrType(length=2))
